(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    914887,      17409]
NotebookOptionsPosition[    910371,      17319]
NotebookOutlinePosition[    910789,      17336]
CellTagsIndexPosition[    910746,      17333]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Data", "Section",
 CellChangeTimes->{{3.939384983057201*^9, 
  3.939384987953508*^9}},ExpressionUUID->"e3140937-e0ac-49c1-8f53-\
8480154aae98"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"kitti15", "=", 
    RowBox[{
    "ResourceData", "[", 
     "\"\<https://www.wolframcloud.com/obj/pierre-andre.brousseau/\
DeployedResources/Data/Kitti15-Stereo/\>\"", "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<Kitti15.wl\>\"", ",", " ", "kitti15"}], "]"}], ";"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.939381541615011*^9, 3.939381547663993*^9}, {
  3.939382546492073*^9, 3.939382553956366*^9}, {3.940875130508168*^9, 
  3.940875131567177*^9}, {3.94087516338361*^9, 3.940875173667547*^9}, {
  3.940886395194067*^9, 
  3.9408864088285627`*^9}},ExpressionUUID->"4641e4fb-7cfa-4c49-82f1-\
e1372bfa2b26"],

Cell[BoxData[
 RowBox[{
  RowBox[{"kitti15", " ", "=", " ", 
   RowBox[{
   "Import", "[", 
    "\"\</home/xaviermorin/Documents/mila/ift6145/TP3/Kitti15.wl\>\"", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.939388106498736*^9, 3.939388138480563*^9}, {
  3.939388170641255*^9, 3.939388239208344*^9}, {3.940896571283657*^9, 
  3.9408965830599327`*^9}, {3.940909122594654*^9, 3.940909157561007*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"f3b78929-97f5-4faf-a22b-f4b1f446bd25"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "directory", "=", 
   "\"\</home/xaviermorin/Documents/mila/ift6145/TP3/sgbm/\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sgbmDisparity", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"None", ",", "200"}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", "200"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fileName", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"directory", ",", 
          RowBox[{
           RowBox[{"ToString", "[", "i", "]"}], "<>", 
           "\"\<_disparity.jpg\>\""}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sgbmDisparity", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "=", 
       RowBox[{"Import", "[", "fileName", "]"}]}], ";"}]}], "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"sgbmDisparity", "//", "Dimensions"}]}], "Input",
 CellChangeTimes->{{3.940909408892997*^9, 3.940909457767495*^9}, 
   3.9409726784050407`*^9, {3.940972719746628*^9, 3.9409727400134563`*^9}, {
   3.940972812325685*^9, 3.940972847906608*^9}, 
   3.941059780341835*^9},ExpressionUUID->"4cf3dba8-8761-4c9f-aead-\
47f9886fea9f"],

Cell[BoxData[
 RowBox[{"{", "200", "}"}]], "Output",
 CellChangeTimes->{{3.940909422024602*^9, 3.9409094690875673`*^9}, 
   3.9409704786286182`*^9, 3.940972168226246*^9, 3.94097229875422*^9, 
   3.940972855675146*^9, 3.94097326776225*^9, 3.9409746030119543`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"f06d6355-c00b-4554-9162-62ac30848e57"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"kitti15SGBM", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<iLeft\>\"", "->", 
        RowBox[{"kitti15", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "\"\<iLeft\>\""}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<iRight\>\"", "->", 
        RowBox[{"kitti15", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "\"\<iRight\>\""}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<iDispLeft\>\"", " ", "->", 
        RowBox[{
         RowBox[{"sgbmDisparity", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", "*", "32"}]}]}], 
      "\[IndentingNewLine]", "|>"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "kitti15", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9409091615257*^9, 3.9409091897242107`*^9}, {
   3.940909354158102*^9, 3.940909359386643*^9}, 3.940909404832753*^9, {
   3.9409731191076508`*^9, 3.940973119584401*^9}, {3.940981223735417*^9, 
   3.940981267292122*^9}, {3.941059826335403*^9, 
   3.941059838786646*^9}},ExpressionUUID->"0491b0b4-5064-4825-b0f9-\
7b8f5c54f678"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomSample", "[", "kitti15SGBM", " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataTrain", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "120"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataValid", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"121", ";;", "160"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataTest", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"161", ";;", "200"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"w", ",", "h"}], "}"}], "=", 
  RowBox[{"ImageDimensions", "[", 
   RowBox[{"dataTrain", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "\"\<iLeft\>\""}], "]"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{3.940909195897408*^9},
 CellLabel->
  "In[126]:=",ExpressionUUID->"75d5a1a3-cd8f-47d1-81f8-8d55aa9995f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"311", ",", "94"}], "}"}]], "Output",
 CellChangeTimes->{
  3.940909331479575*^9, 3.9409094784162683`*^9, 3.940973124354319*^9, 
   3.940973268367065*^9, 3.940975002239748*^9, {3.9409812912051497`*^9, 
   3.940981296689671*^9}},
 CellLabel->
  "Out[130]=",ExpressionUUID->"576b9a60-5892-45aa-8c70-3408a24512fa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neural Network", "Section",
 CellChangeTimes->{{3.93938495914222*^9, 
  3.939384972102396*^9}},ExpressionUUID->"b9f5d3bc-1d75-4c8e-addb-\
b7ff03c37880"],

Cell[CellGroupData[{

Cell["Cost Volume", "Subsection",
 CellChangeTimes->{{3.871588296700656*^9, 
  3.871588322635421*^9}},ExpressionUUID->"e36239bc-4f2d-4c6e-a060-\
0040291618b6"],

Cell["\<\
My personnal implementation of 
https://github.com/JiaRenChang/PSMNet/blob/master/models/stackhourglass.py
The original code uses For loops which require Table in mathematica. \
FunctionLayer does not yet support Table. \
\>", "Text",
 CellChangeTimes->{{3.871588329497242*^9, 3.87158840001932*^9}, {
   3.871588701593533*^9, 3.8715887730270853`*^9}, 3.871589105370763*^9, {
   3.871590106296455*^9, 3.87159011275292*^9}, 
   3.871590232876149*^9},ExpressionUUID->"4469fd14-940c-4fd6-a2f6-\
9774713f5b6d"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"replicateLeft", ",", "rotateRight", ",", "featuresToCost"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"replicateLeft", "[", "maxDisp_", "]"}], ":=", 
  RowBox[{"NetChain", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ReplicateLayer", "[", 
      RowBox[{"maxDisp", "+", "1"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FunctionLayer", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1", ",", "3", ",", "4"}], "}"}]}], "]"}], "&"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rotateRight", "[", 
   RowBox[{"features_", ",", "maxDisp_", ",", 
    RowBox[{"{", 
     RowBox[{"heigth_", ",", "width_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"PaddingLayer", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"maxDisp", ",", "0"}], "}"}]}], "}"}], ",", 
         "\"\<Fixed\>\""}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"FunctionLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "All", ",", 
              RowBox[{
               RowBox[{"1", "-", "d", "+", "maxDisp"}], ";;", 
               RowBox[{"width", "-", "d", "+", "maxDisp"}]}]}], "]"}], "]"}], 
           "}"}], "&"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"d", ",", "0", ",", "maxDisp"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"CatenateLayer", "[", "]"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"FunctionLayer", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1", ",", "3", ",", "4"}], "}"}]}], "]"}], 
         "&"}], "]"}], "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
      RowBox[{"1", "\[Rule]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"d", ",", 
          RowBox[{"{", 
           RowBox[{"d", ",", "2", ",", 
            RowBox[{"maxDisp", "+", "2"}]}], "}"}]}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"maxDisp", "+", "3"}], "\[Rule]", 
         RowBox[{
          RowBox[{"maxDisp", "+", "4"}], "\[Rule]", 
          RowBox[{"NetPort", "[", "\"\<Output\>\"", "]"}]}]}]}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"features", ",", "heigth", ",", "width"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"featuresToCost", "[", 
   RowBox[{"features_", ",", "maxDisp_", ",", 
    RowBox[{"{", 
     RowBox[{"heigth_", ",", "width_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{"FunctionLayer", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"left", ",", "right", ",", "concat"}], "}"}], ",", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"left", "=", 
           RowBox[{
            RowBox[{"replicateLeft", "[", "maxDisp", "]"}], "[", "#fLeft", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"right", "=", 
           RowBox[{
            RowBox[{"rotateRight", "[", 
             RowBox[{"features", ",", "maxDisp", ",", 
              RowBox[{"{", 
               RowBox[{"heigth", ",", "width"}], "}"}]}], "]"}], "[", 
            "#fRight", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"concat", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"left", ",", "right"}], "]"}]}]}], "\[IndentingNewLine]", 
         ")"}]}], "]"}], "&"}], ",", " ", 
     RowBox[{"\"\<fLeft\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"features", ",", "heigth", ",", "width"}], "}"}]}], ",", 
     RowBox[{"\"\<fRight\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"features", ",", "heigth", ",", "width"}], "}"}]}]}], "]"}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.829831401516656*^9, 3.82983140842452*^9}, 
   3.8305141615645847`*^9, {3.843143837920231*^9, 3.843143843925161*^9}, {
   3.8431438743822947`*^9, 3.843143941053485*^9}, {3.843143999711358*^9, 
   3.843144025862974*^9}, {3.843144078634178*^9, 3.8431440832489977`*^9}, {
   3.843144152702919*^9, 3.8431443069273157`*^9}, {3.84338341273495*^9, 
   3.843383422826601*^9}, {3.8433892660749197`*^9, 3.8433892751758347`*^9}, {
   3.843656270922538*^9, 3.8436562953563557`*^9}, {3.843661801709124*^9, 
   3.843661812859282*^9}, {3.8448526058459883`*^9, 3.844852639263761*^9}, {
   3.844852779781753*^9, 3.844852782476565*^9}, {3.8448531667407312`*^9, 
   3.844853169695651*^9}, {3.844877246359672*^9, 3.844877262949418*^9}, 
   3.844878446079709*^9, 3.844878540106473*^9, {3.844879012653454*^9, 
   3.8448790469608088`*^9}, {3.8715886105036077`*^9, 
   3.8715886283060637`*^9}, {3.871589159066559*^9, 3.871589287279818*^9}, {
   3.871589319769512*^9, 3.871589482489751*^9}, {3.871589519874836*^9, 
   3.8715895223691*^9}, {3.8715897444026318`*^9, 3.8715897610652943`*^9}, {
   3.871589911792871*^9, 3.87158992108521*^9}, {3.8715900019366293`*^9, 
   3.8715900050331182`*^9}, {3.8715900722054253`*^9, 3.871590090444323*^9}, {
   3.871590657633238*^9, 3.871590699861947*^9}, {3.939382680131578*^9, 
   3.939382741497751*^9}, {3.939383275915412*^9, 3.939383278322752*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"e8257baa-249d-4763-a4aa-3760dbb265fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Convolution 2D", "Subsection",
 CellChangeTimes->{{3.8715752129574747`*^9, 
  3.871575217602838*^9}},ExpressionUUID->"5a8c07f9-fa25-4427-bd2a-\
2be3c02091b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "conv2Dbn", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conv2Dbn", "[", 
   RowBox[{"f_", ",", 
    RowBox[{"{", 
     RowBox[{"kx_", ",", "ky_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"sx_", ",", "sy_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"dx_", ",", "dy_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{"FunctionLayer", "[", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pad", ",", "c", ",", "bn", ",", "relu"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pad", "=", 
          RowBox[{
           RowBox[{"PaddingLayer", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Floor", "[", 
                   RowBox[{"kx", "/", "2"}], "]"}], "*", "dx"}], ",", 
                 RowBox[{
                  RowBox[{"Floor", "[", 
                   RowBox[{"kx", "/", "2"}], "]"}], "*", "dx"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Floor", "[", 
                   RowBox[{"ky", "/", "2"}], "]"}], "*", "dy"}], ",", 
                 RowBox[{
                  RowBox[{"Floor", "[", 
                   RowBox[{"ky", "/", "2"}], "]"}], "*", "dy"}]}], "}"}]}], 
              "}"}], ",", 
             RowBox[{"Padding", "\[Rule]", "\"\<Fixed\>\""}]}], "]"}], "[", 
           "#Input", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"c", "=", 
          RowBox[{
           RowBox[{"ConvolutionLayer", "[", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{"kx", ",", "ky"}], "}"}], ",", 
             RowBox[{"\"\<Stride\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"sx", ",", "sy"}], "}"}]}], ",", 
             RowBox[{"\"\<Dilation\>\"", "->", 
              RowBox[{"{", 
               RowBox[{"dx", ",", "dy"}], "}"}]}], ",", " ", 
             RowBox[{"\"\<Biases\>\"", "->", "None"}]}], "]"}], "[", "pad", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"bn", "=", 
          RowBox[{
           RowBox[{"BatchNormalizationLayer", "[", "]"}], "[", "c", "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"relu", "=", 
          RowBox[{"Ramp", "[", "bn", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"<|", 
          RowBox[{"\"\<Output\>\"", "->", "relu"}], "|>"}]}], 
        "\[IndentingNewLine]", ")"}]}], "]"}], "&"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conv2Dbn", "[", 
   RowBox[{"f_", ",", 
    RowBox[{"{", 
     RowBox[{"kx_", ",", "ky_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"sx_", ",", "sy_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"conv2Dbn", "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"kx", ",", "ky"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"sx", ",", "sy"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conv2Dbn", "[", 
   RowBox[{"f_", ",", 
    RowBox[{"{", 
     RowBox[{"kx_", ",", "ky_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"conv2Dbn", "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"kx", ",", "ky"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conv2Dbn", "[", "f_Integer", "]"}], ":=", 
  RowBox[{"conv2Dbn", "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8715671106088343`*^9, 3.8715671186310377`*^9}, {
   3.871567158082814*^9, 3.87156719200585*^9}, 3.871567223429289*^9, {
   3.871567288845636*^9, 3.871567379140987*^9}, {3.8715747991944427`*^9, 
   3.871574914616601*^9}, {3.871574958634286*^9, 3.871575050644178*^9}, {
   3.871575086674636*^9, 3.8715751150458927`*^9}, {3.871575201482683*^9, 
   3.871575206780751*^9}, {3.8715767001131697`*^9, 3.871576705753914*^9}, {
   3.8715767840041113`*^9, 3.8715768296089983`*^9}, {3.871576871046831*^9, 
   3.87157690552178*^9}, {3.871577013474997*^9, 3.871577076632963*^9}, 
   3.8715774973369017`*^9, {3.8715781489737*^9, 3.8715781491426353`*^9}, {
   3.87157953653319*^9, 3.87157954528767*^9}, 3.871584846247281*^9, {
   3.871590272583*^9, 3.871590276171089*^9}, {3.871591509953281*^9, 
   3.871591514862053*^9}, {3.87163827568116*^9, 3.87163828904121*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"909769fa-0dc0-4242-a4e6-976b3c35614d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Convolution 3D", "Subsection",
 CellChangeTimes->{{3.8715752129574747`*^9, 3.871575217602838*^9}, 
   3.871591353195191*^9},ExpressionUUID->"10976172-6f9c-42cf-8760-\
c7332b0a8f55"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "conv3Dbn", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conv3Dbn", "[", 
   RowBox[{"f_", ",", 
    RowBox[{"{", 
     RowBox[{"kx_", ",", "ky_", ",", "kz_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"sx_", ",", "sy_", ",", "sz_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{"FunctionLayer", "[", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pad", ",", "c", ",", "bn", ",", "relu"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pad", "=", 
          RowBox[{
           RowBox[{"PaddingLayer", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Floor", "[", 
                  RowBox[{"kx", "/", "2"}], "]"}], ",", 
                 RowBox[{"Floor", "[", 
                  RowBox[{"kx", "/", "2"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Floor", "[", 
                  RowBox[{"ky", "/", "2"}], "]"}], ",", 
                 RowBox[{"Floor", "[", 
                  RowBox[{"ky", "/", "2"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Floor", "[", 
                  RowBox[{"kz", "/", "2"}], "]"}], ",", 
                 RowBox[{"Floor", "[", 
                  RowBox[{"kz", "/", "2"}], "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"Padding", "\[Rule]", "\"\<Fixed\>\""}]}], "]"}], "[", 
           "#Input", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"c", "=", 
          RowBox[{
           RowBox[{"ConvolutionLayer", "[", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{"kx", ",", "ky", ",", "kz"}], "}"}], ",", 
             RowBox[{"\"\<Stride\>\"", "->", 
              RowBox[{"{", 
               RowBox[{"sx", ",", "sy", ",", "sz"}], "}"}]}], ",", " ", 
             RowBox[{"\"\<Biases\>\"", "->", "None"}]}], "]"}], "[", "pad", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"bn", "=", 
          RowBox[{
           RowBox[{"BatchNormalizationLayer", "[", "]"}], "[", "c", "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"relu", "=", 
          RowBox[{"Ramp", "[", "bn", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"<|", 
          RowBox[{"\"\<Output\>\"", "->", "relu"}], "|>"}]}], 
        "\[IndentingNewLine]", ")"}]}], "]"}], "&"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"conv3Dbn", "[", 
    RowBox[{"f_", ",", 
     RowBox[{"{", 
      RowBox[{"kx_", ",", "ky_", ",", "kz_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"conv3Dbn", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"kx", ",", "ky", ",", "kz"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conv3Dbn", "[", "f_Integer", "]"}], ":=", 
  RowBox[{"conv3Dbn", "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3", ",", "3"}], "}"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8715671106088343`*^9, 3.8715671186310377`*^9}, {
   3.871567158082814*^9, 3.87156719200585*^9}, 3.871567223429289*^9, {
   3.871567288845636*^9, 3.871567379140987*^9}, {3.8715747991944427`*^9, 
   3.871574914616601*^9}, {3.871574958634286*^9, 3.871575050644178*^9}, {
   3.871575086674636*^9, 3.8715751150458927`*^9}, {3.871575201482683*^9, 
   3.871575206780751*^9}, {3.8715767001131697`*^9, 3.871576705753914*^9}, {
   3.8715767840041113`*^9, 3.8715768296089983`*^9}, {3.871576871046831*^9, 
   3.87157690552178*^9}, {3.871577013474997*^9, 3.871577076632963*^9}, 
   3.8715774973369017`*^9, {3.8715781489737*^9, 3.8715781491426353`*^9}, {
   3.87157953653319*^9, 3.87157954528767*^9}, 3.871584846247281*^9, {
   3.871590272583*^9, 3.871590276171089*^9}, {3.8715913560219316`*^9, 
   3.871591360597261*^9}, {3.871591398594122*^9, 3.871591445717882*^9}, {
   3.871649146746413*^9, 3.8716492105008717`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"a523a2b9-48e5-44e9-bab2-6f696f128948"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Disparity Regression", "Subsection",
 CellChangeTimes->{{3.871590296563787*^9, 3.8715903037313833`*^9}, {
  3.871591132933737*^9, 3.8715911377687063`*^9}, {3.871591171583838*^9, 
  3.871591178126203*^9}},ExpressionUUID->"e1719df3-4740-4861-9d92-\
deb83e0e3e11"],

Cell["\<\
Implementation of
https://github.com/JiaRenChang/PSMNet/blob/master/models/submodule.py\
\>", "Text",
 CellChangeTimes->{{3.871590778895756*^9, 3.871590784162203*^9}, {
   3.871590842656877*^9, 3.8715908523712873`*^9}, 3.8715912009498997`*^9, {
   3.871727819645836*^9, 3.871727819868208*^9}, {3.871727995117734*^9, 
   3.871727995657896*^9}, 
   3.939383011267967*^9},ExpressionUUID->"da4b007a-08df-485f-b783-\
4a9bc38737c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dispRegression", "[", "maxDisp_", "]"}], ":=", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{"FunctionLayer", "[", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "dispRange", ",", "upsample", ",", "cost", ",", "transposed", ",", 
         "probabilities", ",", "disparityMap"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dispRange", "=", 
          RowBox[{
           RowBox[{"NetArrayLayer", "[", 
            RowBox[{
             RowBox[{"\"\<Array\>\"", "->", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", "maxDisp"}], "]"}]}], ",", 
             RowBox[{"LearningRateMultipliers", "->", "0"}]}], "]"}], "[", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"cost", "=", 
          RowBox[{"#Input", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"transposed", "=", 
          RowBox[{"Transpose", "[", 
           RowBox[{"cost", ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"probabilities", "=", 
          RowBox[{
           RowBox[{"SoftmaxLayer", "[", "3", "]"}], "[", "transposed", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"disparityMap", "=", 
          RowBox[{"probabilities", ".", "dispRange"}]}]}], 
        "\[IndentingNewLine]", ")"}]}], "]"}], "&"}], "]"}], "]"}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.871725357797237*^9, 3.871725388887673*^9}, {
  3.871726541045003*^9, 3.8717265600573483`*^9}, {3.871726619264772*^9, 
  3.8717268954858837`*^9}, {3.8717270026332684`*^9, 3.8717270772266817`*^9}, {
  3.87172717481348*^9, 3.871727186246299*^9}, {3.871727355883801*^9, 
  3.871727458646022*^9}, {3.871727548433238*^9, 3.87172756458906*^9}, {
  3.871727637662414*^9, 3.8717276563465347`*^9}, {3.8717276959239063`*^9, 
  3.871727722078203*^9}, {3.939383053787404*^9, 3.93938305752906*^9}, {
  3.939383428389864*^9, 3.9393834358225813`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"f5549779-b0a5-4c9f-88a6-01afd863ffc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Disparity Estimator", "Subsection",
 CellChangeTimes->{{3.939383021996933*^9, 
  3.9393830368893013`*^9}},ExpressionUUID->"43a97f1e-83a4-4a62-b377-\
b04609a2451e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "disparityNet", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"disparityNet", "[", 
   RowBox[{"maxDisp_", ",", 
    RowBox[{"{", 
     RowBox[{"heigth_", ",", "width_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "featureExtractionLayer", ",", "costVolumeLayer", ",", "CNN3DLayer", 
       ",", "dispRegressionLayer"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"__init", "__"}], "*)"}], "\n", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"featureExtractionLayer", "=", 
        RowBox[{"NetInsertSharedArrays", "[", 
         RowBox[{
          RowBox[{"NetChain", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"conv2Dbn", "[", "16", "]"}], ",", 
             RowBox[{"conv2Dbn", "[", "16", "]"}], ",", 
             RowBox[{"conv2Dbn", "[", "32", "]"}], ",", 
             RowBox[{"conv2Dbn", "[", "32", "]"}]}], "}"}], "]"}], ",", 
          "\"\<encoder\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"costVolumeLayer", "=", 
        RowBox[{"featuresToCost", "[", 
         RowBox[{"32", ",", "maxDisp", ",", 
          RowBox[{"{", 
           RowBox[{"heigth", ",", "width"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"CNN3DLayer", "=", 
        RowBox[{"NetChain", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"conv3Dbn", "[", "32", "]"}], ",", 
           RowBox[{"conv3Dbn", "[", "32", "]"}], ",", 
           RowBox[{"PaddingLayer", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"Padding", "\[Rule]", "\"\<Fixed\>\""}]}], "]"}], ",", 
           RowBox[{"ConvolutionLayer", "[", 
            RowBox[{"1", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
             RowBox[{"\"\<Biases\>\"", "->", "None"}]}], "]"}]}], "}"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dispRegressionLayer", "=", 
        RowBox[{"dispRegression", "[", "maxDisp", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"call", "/", "forward"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"FunctionLayer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "featuresLeft", ",", "featuresRight", ",", "costVolume", ",", 
              "processedCost", ",", "disparity"}], "}"}], ",", 
            RowBox[{"(", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"featuresLeft", "=", 
               RowBox[{"featureExtractionLayer", "[", "#iLeft", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"featuresRight", "=", 
               RowBox[{"featureExtractionLayer", "[", "#iRight", "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"costVolume", "=", 
               RowBox[{"costVolumeLayer", "[", 
                RowBox[{"<|", 
                 RowBox[{
                  RowBox[{"\"\<fLeft\>\"", "->", "featuresLeft"}], ",", 
                  RowBox[{"\"\<fRight\>\"", "->", "featuresRight"}]}], "|>"}],
                 "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"processedCost", "=", 
               RowBox[{"CNN3DLayer", "[", "costVolume", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"disparity", "=", 
               RowBox[{"dispRegressionLayer", "@", "processedCost"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"<|", 
               RowBox[{"\"\<Output\>\"", "->", 
                RowBox[{"{", "disparity", "}"}]}], "|>"}]}], 
             "\[IndentingNewLine]", ")"}]}], "]"}], "&"}], ",", 
         RowBox[{"\"\<iLeft\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"3", ",", "heigth", ",", "width"}], "}"}]}], ",", 
         RowBox[{"\"\<iRight\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"3", ",", "heigth", ",", "width"}], "}"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", ")"}]}], "]"}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9393828489993477`*^9, 3.9393829782796097`*^9}, {
   3.939383085423128*^9, 3.939383195579213*^9}, {3.9393832448057632`*^9, 
   3.939383247735026*^9}, {3.9393832972032423`*^9, 3.939383300092004*^9}, 
   3.939383400519107*^9, {3.93938344028531*^9, 3.9393834461443377`*^9}, {
   3.939384218487508*^9, 3.9393842252788*^9}, {3.939399209545721*^9, 
   3.939399224790114*^9}, {3.940901922369575*^9, 3.940901931828096*^9}, {
   3.9409019785638657`*^9, 3.9409019822914543`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"cdea1023-a1d5-43df-bbe1-daafbf73078a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["L1Loss", "Subsection",
 CellChangeTimes->{{3.9393835081272984`*^9, 
  3.939383518410774*^9}},ExpressionUUID->"04d491a9-a9a0-4acd-9611-\
250b10dfb18c"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "L1Loss", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1Loss", "[", "]"}], ":=", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{"FunctionLayer", "[", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "mask", ",", "diff", ",", "L1mask", ",", "L1", ",", "L2", ",", "n", 
         ",", "mean"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"mask", "=", 
          RowBox[{"UnitStep", "[", 
           RowBox[{"#Target", "-", 
            RowBox[{"Power", "[", 
             RowBox[{"10", ",", 
              RowBox[{"-", "6"}]}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"diff", "=", 
          RowBox[{
           RowBox[{"AggregationLayer", "[", 
            RowBox[{"Total", ",", "All"}], "]"}], "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"#Input", "-", "#Target"}], "]"}], "*", "mask"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"n", "=", 
          RowBox[{
           RowBox[{"AggregationLayer", "[", 
            RowBox[{"Total", ",", "All"}], "]"}], "[", "mask", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"mean", "=", 
          RowBox[{"diff", "/", "n"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"<|", 
          RowBox[{"\"\<Output\>\"", "->", "mean"}], "|>"}]}], 
        "\[IndentingNewLine]", ")"}]}], "]"}], "&"}], "]"}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9393835313291683`*^9, 3.939383533473692*^9}, {
  3.9393835826491013`*^9, 3.939383593363419*^9}, {3.939383627305838*^9, 
  3.939383657010707*^9}, {3.939383730627249*^9, 3.939383735055923*^9}, {
  3.9393837964997177`*^9, 3.939383803179521*^9}, {3.939383841023059*^9, 
  3.939383856917634*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"70fa9e73-6a13-4ada-af62-d494a6763467"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Trainable Net", "Subsection",
 CellChangeTimes->{{3.871740547566408*^9, 3.871740552302205*^9}, {
  3.871740632062546*^9, 3.8717406351878233`*^9}, {3.8717406944667387`*^9, 
  3.8717407160677423`*^9}},ExpressionUUID->"834f6c79-7eb8-455d-984a-\
89bb9efe75b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainableNet", "[", 
   RowBox[{"maxDisp_", ",", 
    RowBox[{"{", 
     RowBox[{"height_", ",", "width_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "encRGB", ",", "encGray", ",", "disparitynet", ",", "L1LossLayer"}], 
      "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"(*", "init", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"encRGB", "=", 
        RowBox[{"NetEncoder", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Image\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"width", ",", "height"}], "}"}], ",", 
           RowBox[{"ColorSpace", "->", "\"\<RGB\>\""}]}], "}"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"encGray", "=", 
        RowBox[{"NetEncoder", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Image\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"width", ",", "height"}], "}"}], ",", 
           RowBox[{"ColorSpace", "->", "\"\<Grayscale\>\""}]}], "}"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"disparitynet", "=", 
        RowBox[{"disparityNet", "[", 
         RowBox[{"maxDisp", ",", 
          RowBox[{"{", 
           RowBox[{"height", ",", "width"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"L1LossLayer", "=", 
        RowBox[{"L1Loss", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"call", "/", "forward"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"FunctionLayer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"disparity", ",", "loss"}], "}"}], ",", 
            RowBox[{"(", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"disparity", "=", 
               RowBox[{"disparitynet", "[", 
                RowBox[{"<|", 
                 RowBox[{
                  RowBox[{"\"\<iLeft\>\"", "->", "#iLeft"}], ",", 
                  RowBox[{"\"\<iRight\>\"", "->", "#iRight"}]}], "|>"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"loss", "=", 
               RowBox[{"L1LossLayer", "[", 
                RowBox[{"<|", 
                 RowBox[{
                  RowBox[{"\"\<Input\>\"", "->", "disparity"}], ",", 
                  RowBox[{"\"\<Target\>\"", "->", "#iDispLeft"}]}], "|>"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<Output\>\"", "->", "disparity"}], ",", 
                RowBox[{"\"\<Loss\>\"", "->", "loss"}]}], "|>"}]}], 
             "\[IndentingNewLine]", ")"}]}], "]"}], "&"}], ",", 
         RowBox[{"\"\<iLeft\>\"", "->", "encRGB"}], ",", 
         RowBox[{"\"\<iRight\>\"", "->", "encRGB"}], ",", 
         RowBox[{"\"\<iDispLeft\>\"", "->", "encGray"}]}], "]"}]}], 
      "\[IndentingNewLine]", ")"}]}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.871744516370008*^9, 3.871744556756239*^9}, {
   3.871744591560041*^9, 3.871744728976083*^9}, {3.871744765659544*^9, 
   3.871744880504174*^9}, {3.871744975023696*^9, 3.871745027930551*^9}, 
   3.8717451294028397`*^9, {3.871745214595351*^9, 3.871745216674305*^9}, {
   3.871745299043364*^9, 3.8717453329361887`*^9}, {3.939383888071815*^9, 
   3.9393841966358767`*^9}, {3.939384238749591*^9, 3.939384240128693*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"f21e6386-a146-4f26-b527-b4f2730cc4d0"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.939384096266622*^9, 3.939384103053422*^9}, 
   3.9409060552387667`*^9},ExpressionUUID->"345dec28-76b6-4c41-9181-\
9d6c58997edc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Training", "Section",
 CellChangeTimes->{{3.8717455422947283`*^9, 
  3.871745546330801*^9}},ExpressionUUID->"9998fd17-7b91-46cf-903a-\
dbb51ab588ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tn", "=", 
  RowBox[{"trainableNet", "[", 
   RowBox[{"32", ",", 
    RowBox[{"{", 
     RowBox[{"h", ",", "w"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.939384276141445*^9, 3.9393842766408863`*^9}, {
  3.939388281796389*^9, 3.939388285053269*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"e00f1744-55f4-41fa-bd8c-8ac0cd58e00f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetGraph",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 
                    20.}, {19.903200149536133`, 16.}, {17.903200149536133`, 
                    14.}, {13.903200149536133`, 14.}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    16.}, {7.903200149536133, 20.}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    12.}, {7.903200149536133, 8.}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    Hue[
                    0.9744623655913979, 0.4881889763779528, 
                    0.996078431372549], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {
                    18., 21.}}}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {
                    12., 16.}}}]}, {
                    FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6.,
                     21.}}}]}, {
                    FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 
                    10.}}}]}}}}}, {
                Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                 ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], Center,
                Center, 32], 
              InsetBox[
               FormBox[
                FrameBox[
                 StyleBox["\"uninitialized\"", 
                  RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                  StripOnInput -> False], Background -> GrayLevel[1, 0.9], 
                 FrameStyle -> None, FrameMargins -> {{0, 0}, {-1.5, -1.5}}, 
                 RoundingRadius -> 3, BaselinePosition -> (Center -> Center), 
                 StripOnInput -> False], TraditionalForm], {14, 14}]}, {
             ImageSize -> 
              Dynamic[{
                Automatic, 
                 4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
              PlotRange -> {{-12, 40}, {-2, 30}}, ImageSize -> {60, 36}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{"\"Number of inputs\"", "\":\""}, "RowDefault"],
                  "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["3", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 
                 TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["2", "SummaryItem"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 
                    20.}, {19.903200149536133`, 16.}, {17.903200149536133`, 
                    14.}, {13.903200149536133`, 14.}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    16.}, {7.903200149536133, 20.}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    12.}, {7.903200149536133, 8.}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    Hue[
                    0.9744623655913979, 0.4881889763779528, 
                    0.996078431372549], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {
                    18., 21.}}}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {
                    12., 16.}}}]}, {
                    FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6.,
                     21.}}}]}, {
                    FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 
                    10.}}}]}}}}}, {
                Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                 ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], Center,
                Center, 32], 
              InsetBox[
               FormBox[
                FrameBox[
                 StyleBox["\"uninitialized\"", 
                  RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                  StripOnInput -> False], Background -> GrayLevel[1, 0.9], 
                 FrameStyle -> None, FrameMargins -> {{0, 0}, {-1.5, -1.5}}, 
                 RoundingRadius -> 3, BaselinePosition -> (Center -> Center), 
                 StripOnInput -> False], TraditionalForm], {14, 14}]}, {
             ImageSize -> 
              Dynamic[{
                Automatic, 
                 4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
              PlotRange -> {{-12, 40}, {-2, 30}}, ImageSize -> {60, 36}}], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetGraph`selection = None}, 
                 GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"iDispLeft\"", TraditionalForm], 
                    
                    Offset[{0, -9}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"loss\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-41, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -20.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"iLeft\"", TraditionalForm], 
                    
                    Offset[{0, -9}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"disparity\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-41, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -20.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"iRight\"", TraditionalForm], 
                    
                    Offset[{0, -9}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -9}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    Offset[{0, -9}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"94\"", "\"311\""},
                     "RowWithSeparators"], 
                    RGBColor[
                    0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], StripOnInput -> False], 
                    TraditionalForm], 
                    
                    Offset[{2.1435917623294266`*^-7, 
                    5.499999999999996}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999992, -3.8974395678716846`*^-8}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"94\"", "\"311\""},
                     "RowWithSeparators"], 
                    RGBColor[
                    0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], StripOnInput -> False], 
                    TraditionalForm], 
                    
                    Offset[{-4.532230505142574, 
                    3.1159086392664173`}, {-2.4499999852628056`, 
                    0.5500000656474976}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.5665288435029849,
                     0.8240419100259225}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"94\"", "\"311\""},
                     "RowWithSeparators"], 
                    RGBColor[
                    0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], StripOnInput -> False], 
                    TraditionalForm], 
                    
                    Offset[{2.1435917574308395`*^-7, 
                    5.4999999999999964`}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999993, -3.897439558965163*^-8}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"94\"", "\"311\""},
                     "RowWithSeparators"], 
                    RGBColor[
                    0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], StripOnInput -> False], 
                    TraditionalForm], 
                    
                    Offset[{2.1435917574308395`*^-7, 
                    5.4999999999999964`}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999993, -3.897439558965163*^-8}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"94\"", "\"311\""},
                     "RowWithSeparators"], 
                    RGBColor[
                    0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], StripOnInput -> False], 
                    TraditionalForm], 
                    
                    Offset[{4.532230661050466, 
                    3.1159084124913003`}, {-1.4499999879422958`, 
                    0.4500000388526005}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.5665288022711455, -0.824041938372812}], 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[DoubleStruckCapitalR]\"", 
                    RGBColor[
                    0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], StripOnInput -> False], 
                    TraditionalForm], 
                    
                    Offset[{2.1435917623294266`*^-7, 
                    5.499999999999996}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999992, -3.8974395678716846`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"iDispLeft\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"iDispLeft", 
                    Graphics[{{}, {
                    RGBColor[0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"iLeft\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"iLeft\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 3\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"iLeft", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "iLeft"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"iRight\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"iRight\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 3\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"iRight", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "iRight"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    RGBColor[0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-1.4499999999999993`, 
                    3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -3.8974395678716865`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"iDispLeft\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"iDispLeft", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Target"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-2.4499999852628056`, 
                    0.5500000656474976}, {-0.25, 0}, 
                    Offset[10], {1.0000000267948967`, 1.4545454155710584`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"iLeft\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"iLeft\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 3\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"iLeft", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "iLeft"}], 
                    
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-2.4499999732051023`, 
                    1.0000000656474974`}, {-0.25, 0}, 
                    Offset[10], {0.9999999999999998, -3.897439558965165*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"iRight\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"iRight\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 3\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"iRight", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "iRight"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[10], {0.9999999999999998, -3.897439558965165*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-1.4499999879422958`, 
                    0.4500000388526005}, {-0.25, 0}, 
                    Offset[10], {0.9999999732051027, -1.4545454935198499`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -3.8974395678716865`*^-8}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Loss"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"iDispLeft\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["iDispLeft", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.25, 0.599125, 0.5153350000000001], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 
                    20.}, {19.903200149536133`, 16.}, {17.903200149536133`, 
                    14.}, {13.903200149536133`, 14.}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    16.}, {7.903200149536133, 20.}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    12.}, {7.903200149536133, 8.}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8313725490196079, 0.4117647058823529, 
                    0.12941176470588237`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {
                    18., 21.}}}]}, {
                    FaceForm[{
                    RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {
                    12., 16.}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6.,
                     21.}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5803921568627451, 0.5098039215686274, 
                    0.8352941176470589], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 
                    10.}}}]}}}}}, {
                    Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                    ImageSize -> 36, 
                    PlotRange -> {{-2, 30}, {-2, 30}}}], {-0.9999999999999997,
                     2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox["NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["loss", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"iLeft\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["iLeft", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 
                    20.}, {19.903200149536133`, 16.}, {17.903200149536133`, 
                    14.}, {13.903200149536133`, 14.}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    16.}, {7.903200149536133, 20.}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    12.}, {7.903200149536133, 8.}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    Hue[
                    0.9744623655913979, 0.4881889763779528, 
                    0.996078431372549], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {
                    18., 21.}}}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {
                    12., 16.}}}]}, {
                    FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6.,
                     21.}}}]}, {
                    FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 
                    10.}}}]}}}}}, {
                    Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                    ImageSize -> 36, 
                    PlotRange -> {{-2, 30}, {-2, 
                    30}}}], {-1.9999999732051024`, 1.0000000535897937`}], 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"disparity\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["disparity", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-2.999999973205102, 1.0000000803846907`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"iRight\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["iRight", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, 
                    DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    
                    GeneralUtilities`Graphics`PackagePrivate`\
makeSelectionHighlighter[
                    
                    Part[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-2.999999973205102, 
                    1.0000000803846907`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {0., 0.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    
                    Part[{8, 31, 8, 31, 8, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Part[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    RGBColor[0.25, 0.599125, 0.515335], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    RGBColor[0.817375, 0.318085, 0.3521275], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    StandardForm, Graphics]]}, 
                    ImageSize -> {234.99999999999994`, 140.00000643077527`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{35., 35.}, {35., 25.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"iLeft\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"iLeft\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"iLeft"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"iLeft\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"iLeft"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"iRight\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"iRight\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"iRight"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"iRight\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"iRight"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"iDispLeft\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"iDispLeft\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"iDispLeft"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"iDispLeft\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"iDispLeft"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25},
                     {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {12.75, 
                    17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "disparity" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "iLeft" -> NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT], "iRight" -> 
                    NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "featuresLeft" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|
                    "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> {{0, 0}, {1, 1}, {1, 
                    1}}, "Padding" -> "Fixed", "$Rank" -> 3, 
                    "$InputSize" -> {3, 94, 311}, 
                    "$OutputSize" -> {3, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder1/c/Weights"|>], "Biases" -> 
                    None|>, "Parameters" -> <|
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {96, 313}, 
                    "$OutputSize" -> {94, 311}, "$WeightsInputChannels" -> 
                    3|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder1/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder1/bn/Biases"|>], 
                    "MovingMean" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pad", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|
                    "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> {{0, 0}, {1, 1}, {1, 
                    1}}, "Padding" -> "Fixed", "$Rank" -> 3, 
                    "$InputSize" -> {16, 94, 311}, 
                    "$OutputSize" -> {16, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder2/c/Weights"|>], "Biases" -> 
                    None|>, "Parameters" -> <|
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {96, 313}, 
                    "$OutputSize" -> {94, 311}, "$WeightsInputChannels" -> 
                    16|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder2/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder2/bn/Biases"|>], 
                    "MovingMean" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pad", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu", "Outputs", "Output"]}|>, 
                    "3" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|
                    "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> {{0, 0}, {1, 1}, {1, 
                    1}}, "Padding" -> "Fixed", "$Rank" -> 3, 
                    "$InputSize" -> {16, 94, 311}, 
                    "$OutputSize" -> {16, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder3/c/Weights"|>], "Biases" -> 
                    None|>, "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {96, 313}, 
                    "$OutputSize" -> {94, 311}, "$WeightsInputChannels" -> 
                    16|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder3/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder3/bn/Biases"|>], 
                    "MovingMean" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pad", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu", "Outputs", "Output"]}|>, 
                    "4" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|
                    "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> {{0, 0}, {1, 1}, {1, 
                    1}}, "Padding" -> "Fixed", "$Rank" -> 3, 
                    "$InputSize" -> {32, 94, 311}, 
                    "$OutputSize" -> {32, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder4/c/Weights"|>], "Biases" -> 
                    None|>, "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {96, 313}, 
                    "$OutputSize" -> {94, 311}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder4/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder4/bn/Biases"|>], 
                    "MovingMean" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pad", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "featuresRight" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|
                    "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> {{0, 0}, {1, 1}, {1, 
                    1}}, "Padding" -> "Fixed", "$Rank" -> 3, 
                    "$InputSize" -> {3, 94, 311}, 
                    "$OutputSize" -> {3, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder1/c/Weights"|>], "Biases" -> 
                    None|>, "Parameters" -> <|
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {96, 313}, 
                    "$OutputSize" -> {94, 311}, "$WeightsInputChannels" -> 
                    3|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder1/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder1/bn/Biases"|>], 
                    "MovingMean" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pad", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|
                    "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> {{0, 0}, {1, 1}, {1, 
                    1}}, "Padding" -> "Fixed", "$Rank" -> 3, 
                    "$InputSize" -> {16, 94, 311}, 
                    "$OutputSize" -> {16, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder2/c/Weights"|>], "Biases" -> 
                    None|>, "Parameters" -> <|
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {96, 313}, 
                    "$OutputSize" -> {94, 311}, "$WeightsInputChannels" -> 
                    16|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder2/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder2/bn/Biases"|>], 
                    "MovingMean" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pad", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu", "Outputs", "Output"]}|>, 
                    "3" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|
                    "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> {{0, 0}, {1, 1}, {1, 
                    1}}, "Padding" -> "Fixed", "$Rank" -> 3, 
                    "$InputSize" -> {16, 94, 311}, 
                    "$OutputSize" -> {16, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder3/c/Weights"|>], "Biases" -> 
                    None|>, "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {96, 313}, 
                    "$OutputSize" -> {94, 311}, "$WeightsInputChannels" -> 
                    16|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder3/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder3/bn/Biases"|>], 
                    "MovingMean" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pad", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu", "Outputs", "Output"]}|>, 
                    "4" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|
                    "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> {{0, 0}, {1, 1}, {1, 
                    1}}, "Padding" -> "Fixed", "$Rank" -> 3, 
                    "$InputSize" -> {32, 94, 311}, 
                    "$OutputSize" -> {32, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder4/c/Weights"|>], "Biases" -> 
                    None|>, "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {96, 313}, 
                    "$OutputSize" -> {94, 311}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder4/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder4/bn/Biases"|>], 
                    "MovingMean" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pad", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "costVolume" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"fLeft" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT], "fRight" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 33, 94, 311}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"left" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Replicate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[33], "Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{33, 32, 94, 311}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Transpose[#, {2, 1, 3, 4}]& ), 
                    "Net" -> <|"Type" -> "Transpose", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{2, 1, 3, 4}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{33, 32, 
                    94, 311}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 33,
                     94, 311}, NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{33, 32, 
                    94, 311}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "right" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> {{0, 0}, {0, 0}, {32,
                     0}}, "Padding" -> "Fixed", "$Rank" -> 3, 
                    "$InputSize" -> {32, 94, 311}, 
                    "$OutputSize" -> {32, 94, 343}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[33, 343]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[32, 342]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[31, 341]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[30, 340]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[29, 339]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[28, 338]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[27, 337]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[26, 336]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[25, 335]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "11" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[24, 334]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "12" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[23, 333]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "13" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[22, 332]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "14" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[21, 331]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "15" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[20, 330]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "16" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[19, 329]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "17" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[18, 328]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "18" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[17, 327]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "19" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[16, 326]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "20" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[15, 325]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "21" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[14, 324]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "22" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[13, 323]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "23" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[12, 322]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "24" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[11, 321]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "25" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[10, 320]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "26" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[9, 319]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "27" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[8, 318]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "28" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[7, 317]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "29" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[6, 316]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "30" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[5, 315]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "31" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[4, 314]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "32" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[3, 313]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "33" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[2, 312]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "34" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[1, 311]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "35" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input3" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input4" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input5" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input6" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input7" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input8" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input9" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input10" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input11" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input12" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input13" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input14" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input15" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input16" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input17" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input18" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input19" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input20" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input21" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input22" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input23" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input24" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input25" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input26" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input27" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input28" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input29" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input30" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input31" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input32" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input33" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{33, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "36" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Transpose[#, {2, 1, 3, 4}]& ), 
                    "Net" -> <|"Type" -> "Transpose", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{2, 1, 3, 4}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{33, 32, 
                    94, 311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 33,
                     94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{33, 32, 
                    94, 311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "20", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "22", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "23", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "24", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "25", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "26", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "27", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "28", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "29", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "30", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "31", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "32", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "33", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "34", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input7"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input8"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input9"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input10"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input11"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input12"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input13"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input14"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input15"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input16"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input17"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input18"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input19"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "20", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input20"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "21", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input21"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "22", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input22"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "23", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input23"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "24", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input24"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "25", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input25"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "26", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input26"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "27", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input27"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "28", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input28"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "29", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input29"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "30", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input30"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "31", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input31"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "32", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input32"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "33", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Inputs", "Input33"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "34", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "36", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "36", "Outputs", "Output"]}|>, 
                    "concat" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`AtomT], "Input2" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 33, 94, 311}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "left", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "fLeft"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "right", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "fRight"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "concat", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "left", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "concat", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "right", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "concat", "Outputs", "Output"]}|>, 
                    "processedCost" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 33, 94, 311}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|
                    "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> {{0, 0}, {1, 1}, {1, 
                    1}, {1, 1}}, "Padding" -> "Fixed", "$Rank" -> 4, 
                    "$InputSize" -> {64, 33, 94, 311}, 
                    "$OutputSize" -> {64, 35, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 33, 
                    94, 311}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 96, 313}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`TensorT[{32, 64, 3, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 32, 
                    "KernelSize" -> {3, 3, 3}, "Stride" -> {1, 1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 3, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {35, 96, 313}, 
                    "$OutputSize" -> {33, 94, 311}, "$WeightsInputChannels" -> 
                    64|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 96, 313}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {33, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 33, 
                    94, 311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 33, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 33, 
                    94, 311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pad", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|
                    "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> {{0, 0}, {1, 1}, {1, 
                    1}, {1, 1}}, "Padding" -> "Fixed", "$Rank" -> 4, 
                    "$InputSize" -> {32, 33, 94, 311}, 
                    "$OutputSize" -> {32, 35, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 33, 
                    94, 311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 35, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`TensorT[{32, 32, 3, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 32, 
                    "KernelSize" -> {3, 3, 3}, "Stride" -> {1, 1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 3, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {35, 96, 313}, 
                    "$OutputSize" -> {33, 94, 311}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 35, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {33, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 33, 
                    94, 311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 33, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 33, 
                    94, 311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pad", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu", "Outputs", "Output"]}|>, 
                    "3" -> <|"Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> {{0, 0}, {1, 1}, {1, 
                    1}, {1, 1}}, "Padding" -> "Fixed", "$Rank" -> 4, 
                    "$InputSize" -> {32, 33, 94, 311}, 
                    "$OutputSize" -> {32, 35, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 35, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`TensorT[{1, 32, 3, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 1, 
                    "KernelSize" -> {3, 3, 3}, "Stride" -> {1, 1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 3, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {35, 96, 313}, 
                    "$OutputSize" -> {33, 94, 311}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 35, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 33, 94, 311}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "disparity" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{94, 311}, NeuralNetworks`RealT]|>,
                     "Nodes" -> <|"dispRange" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{33}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{33}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {33}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{33}, NeuralNetworks`AtomT]|>, 
                    "TrainingParameters" -> <|
                    "LearningRateMultipliers" -> 0|>|>, 
                    "cost" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{1}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "transposed" -> <|
                    "Type" -> "Transpose", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{3, 1, 2}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{94, 311, 33}, 
                    NeuralNetworks`RealT]|>|>, 
                    "probabilities" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 3|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{94, 311, 33}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{94, 311, 33}, 
                    NeuralNetworks`RealT]|>|>, 
                    "disparityMap" -> <|
                    "Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{94, 311, 33}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{33}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "cost", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "disparityMap", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dispRange", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "transposed", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "cost", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "probabilities", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "transposed", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "disparityMap", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "probabilities", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "disparityMap", "Outputs", "Output"]}|>, 
                    "output" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{94, 311}, NeuralNetworks`RealT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "featuresLeft", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "iLeft"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "featuresRight", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "iRight"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "costVolume", "Inputs", "fLeft"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "featuresLeft", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "costVolume", "Inputs", "fRight"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "featuresRight", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "processedCost", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "costVolume", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "disparity", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "processedCost", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "disparity", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Outputs", "Output"]}|>, 
                    "loss" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Target" -> NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "mask" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    UnitStep[-1.*^-6 + #]& ], "$Dimensions" -> {1, 94, 311}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "n" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[0, 
                    DirectedInfinity[1]]]|>|>, 
                    "diff" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT], "mask" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[#3 Abs[
                    Subtract[#, #2]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT], "mask" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "mask"] -> 
                    NeuralNetworks`NetPath["Inputs", "mask"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}|>, 
                    "mean" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Divide[#, #2]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"diff" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], "n" -> 
                    NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[0, 
                    DirectedInfinity[1]]]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "mask", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "diff", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "diff", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "diff", "Inputs", "mask"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "mask", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "n", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "mask", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "mean", "Inputs", "n"] -> 
                    NeuralNetworks`NetPath["Nodes", "n", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "mean", "Inputs", "diff"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "diff", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "mean", "Outputs", "Output"]}|>|>, 
                    "Inputs" -> <|
                    "iLeft" -> <|
                    "Form" -> NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT], "Type" -> "Image", "ImageSize" -> 
                    NeuralNetworks`ValidatedParameter[{311, 94}], 
                    "ColorSpace" -> "RGB", "ColorChannels" -> 3, 
                    "Interleaving" -> False, "MeanImage" -> None, 
                    "VarianceImage" -> None, "DataTransposed" -> False, 
                    "Method" -> "Stretch", "Resampling" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Padding" -> 
                    GrayLevel[0], "Alignment" -> Center, "$Version" -> 
                    "14.1.2"|>, 
                    "iRight" -> <|
                    "Form" -> NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT], "Type" -> "Image", "ImageSize" -> 
                    NeuralNetworks`ValidatedParameter[{311, 94}], 
                    "ColorSpace" -> "RGB", "ColorChannels" -> 3, 
                    "Interleaving" -> False, "MeanImage" -> None, 
                    "VarianceImage" -> None, "DataTransposed" -> False, 
                    "Method" -> "Stretch", "Resampling" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Padding" -> 
                    GrayLevel[0], "Alignment" -> Center, "$Version" -> 
                    "14.1.2"|>, 
                    "iDispLeft" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT], "Type" -> "Image", "ImageSize" -> 
                    NeuralNetworks`ValidatedParameter[{311, 94}], 
                    "ColorSpace" -> "Grayscale", "ColorChannels" -> 1, 
                    "Interleaving" -> False, "MeanImage" -> None, 
                    "VarianceImage" -> None, "DataTransposed" -> False, 
                    "Method" -> "Stretch", "Resampling" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Padding" -> 
                    GrayLevel[0], "Alignment" -> Center, "$Version" -> 
                    "14.1.2"|>|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT], "Loss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "disparity", "Inputs", "iLeft"] -> 
                    NeuralNetworks`NetPath["Inputs", "iLeft"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "disparity", "Inputs", "iRight"] -> 
                    NeuralNetworks`NetPath["Inputs", "iRight"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "iDispLeft"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "disparity", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "disparity", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "loss", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "iDispLeft"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Inputs", "iLeft"], 
                    NeuralNetworks`NetPath["Nodes", "disparity"], 
                    NeuralNetworks`NetPath["Inputs", "iRight"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "iDispLeft"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Inputs", "iLeft"], 
                    NeuralNetworks`NetPath["Nodes", "disparity"], 
                    NeuralNetworks`NetPath["Inputs", "iRight"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <|
                    "encoder1/bn/Biases" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "encoder1/bn/Scaling" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "encoder1/c/Weights" -> 
                    NeuralNetworks`TensorT[{16, 3, 3, 3}, 
                    NeuralNetworks`RealT], "encoder2/bn/Biases" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "encoder2/bn/Scaling" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "encoder2/c/Weights" -> 
                    NeuralNetworks`TensorT[{16, 16, 3, 3}, 
                    NeuralNetworks`RealT], "encoder3/bn/Biases" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "encoder3/bn/Scaling" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "encoder3/c/Weights" -> 
                    NeuralNetworks`TensorT[{32, 16, 3, 3}, 
                    NeuralNetworks`RealT], "encoder4/bn/Biases" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "encoder4/bn/Scaling" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "encoder4/c/Weights" -> 
                    NeuralNetworks`TensorT[{32, 32, 3, 3}, 
                    NeuralNetworks`RealT]|>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                 Initialization :> {NetGraph}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetGraph[<|
   "Type" -> "Graph", 
    "Inputs" -> <|
     "iLeft" -> NetEncoder[
       "Image", <|
        "ImageSize" -> NeuralNetworks`ValidatedParameter[{311, 94}], 
         "ColorSpace" -> "RGB", "ColorChannels" -> 3, "Interleaving" -> False,
          "MeanImage" -> None, "VarianceImage" -> None, "DataTransposed" -> 
         False, "Method" -> "Stretch", "Resampling" -> 
         NeuralNetworks`ValidatedParameter[Automatic], "Padding" -> 
         GrayLevel[0], "Alignment" -> Center, "$Version" -> "14.1.2"|>, 
        NeuralNetworks`TensorT[{3, 94, 311}, NeuralNetworks`RealT]], "iRight" -> 
      NetEncoder[
       "Image", <|
        "ImageSize" -> NeuralNetworks`ValidatedParameter[{311, 94}], 
         "ColorSpace" -> "RGB", "ColorChannels" -> 3, "Interleaving" -> False,
          "MeanImage" -> None, "VarianceImage" -> None, "DataTransposed" -> 
         False, "Method" -> "Stretch", "Resampling" -> 
         NeuralNetworks`ValidatedParameter[Automatic], "Padding" -> 
         GrayLevel[0], "Alignment" -> Center, "$Version" -> "14.1.2"|>, 
        NeuralNetworks`TensorT[{3, 94, 311}, NeuralNetworks`RealT]], 
      "iDispLeft" -> 
      NetEncoder[
       "Image", <|
        "ImageSize" -> NeuralNetworks`ValidatedParameter[{311, 94}], 
         "ColorSpace" -> "Grayscale", "ColorChannels" -> 1, "Interleaving" -> 
         False, "MeanImage" -> None, "VarianceImage" -> None, 
         "DataTransposed" -> False, "Method" -> "Stretch", "Resampling" -> 
         NeuralNetworks`ValidatedParameter[Automatic], "Padding" -> 
         GrayLevel[0], "Alignment" -> Center, "$Version" -> "14.1.2"|>, 
        NeuralNetworks`TensorT[{1, 94, 311}, NeuralNetworks`RealT]]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{1, 94, 311}, NeuralNetworks`RealT], 
      "Loss" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
    "Nodes" -> <|
     "disparity" -> <|
       "Type" -> "Graph", 
        "Inputs" -> <|
         "iLeft" -> NeuralNetworks`TensorT[{3, 94, 311}, 
            NeuralNetworks`RealT], "iRight" -> 
          NeuralNetworks`TensorT[{3, 94, 311}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> 
          NeuralNetworks`TensorT[{1, 94, 311}, NeuralNetworks`RealT]|>, 
        "Nodes" -> <|
         "featuresLeft" -> <|
           "Type" -> "Chain", 
            "Nodes" -> <|
             "1" -> <|"Type" -> "Graph", 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Nodes" -> <|
                 "pad" -> <|
                   "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {3, 94, 311}, 
                    "$OutputSize" -> {3, 96, 313}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                  "c" -> <|
                   "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder1/c/Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {96, 313}, 
                    "$OutputSize" -> {94, 311}, "$WeightsInputChannels" -> 
                    3|>, "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "bn" -> <|
                   "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder1/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder1/bn/Biases"|>], "MovingMean" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "relu" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Nodes", "pad", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "pad", "Outputs", "Output"],
                   NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "relu", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "bn", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "relu", "Outputs", "Output"]}|>, 
              "2" -> <|"Type" -> "Graph", 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Nodes" -> <|
                 "pad" -> <|
                   "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {16, 94, 311}, 
                    "$OutputSize" -> {16, 96, 313}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                  "c" -> <|
                   "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder2/c/Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {96, 313}, 
                    "$OutputSize" -> {94, 311}, "$WeightsInputChannels" -> 
                    16|>, "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "bn" -> <|
                   "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder2/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder2/bn/Biases"|>], "MovingMean" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "relu" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Nodes", "pad", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "pad", "Outputs", "Output"],
                   NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "relu", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "bn", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "relu", "Outputs", "Output"]}|>, 
              "3" -> <|"Type" -> "Graph", 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Nodes" -> <|
                 "pad" -> <|
                   "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {16, 94, 311}, 
                    "$OutputSize" -> {16, 96, 313}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                  "c" -> <|
                   "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder3/c/Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {96, 313}, 
                    "$OutputSize" -> {94, 311}, "$WeightsInputChannels" -> 
                    16|>, "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "bn" -> <|
                   "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder3/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder3/bn/Biases"|>], "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "relu" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Nodes", "pad", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "pad", "Outputs", "Output"],
                   NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "relu", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "bn", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "relu", "Outputs", "Output"]}|>, 
              "4" -> <|"Type" -> "Graph", 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Nodes" -> <|
                 "pad" -> <|
                   "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {32, 94, 311}, 
                    "$OutputSize" -> {32, 96, 313}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                  "c" -> <|
                   "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder4/c/Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {96, 313}, 
                    "$OutputSize" -> {94, 311}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "bn" -> <|
                   "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder4/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder4/bn/Biases"|>], "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "relu" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Nodes", "pad", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "pad", "Outputs", "Output"],
                   NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "relu", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "bn", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "relu", "Outputs", "Output"]}|>|>, 
            "Edges" -> {
             NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Inputs", "Input"], 
              NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Outputs", "Output"] -> 
              NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"]}, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{3, 94, 311}, 
                NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{32, 94, 311}, NeuralNetworks`RealT]|>|>,
           "featuresRight" -> <|
           "Type" -> "Chain", 
            "Nodes" -> <|
             "1" -> <|"Type" -> "Graph", 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Nodes" -> <|
                 "pad" -> <|
                   "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {3, 94, 311}, 
                    "$OutputSize" -> {3, 96, 313}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                  "c" -> <|
                   "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder1/c/Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {96, 313}, 
                    "$OutputSize" -> {94, 311}, "$WeightsInputChannels" -> 
                    3|>, "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "bn" -> <|
                   "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder1/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder1/bn/Biases"|>], "MovingMean" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "relu" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Nodes", "pad", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "pad", "Outputs", "Output"],
                   NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "relu", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "bn", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "relu", "Outputs", "Output"]}|>, 
              "2" -> <|"Type" -> "Graph", 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Nodes" -> <|
                 "pad" -> <|
                   "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {16, 94, 311}, 
                    "$OutputSize" -> {16, 96, 313}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                  "c" -> <|
                   "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder2/c/Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {96, 313}, 
                    "$OutputSize" -> {94, 311}, "$WeightsInputChannels" -> 
                    16|>, "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "bn" -> <|
                   "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder2/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder2/bn/Biases"|>], "MovingMean" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "relu" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Nodes", "pad", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "pad", "Outputs", "Output"],
                   NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "relu", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "bn", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "relu", "Outputs", "Output"]}|>, 
              "3" -> <|"Type" -> "Graph", 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Nodes" -> <|
                 "pad" -> <|
                   "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {16, 94, 311}, 
                    "$OutputSize" -> {16, 96, 313}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                  "c" -> <|
                   "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder3/c/Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {96, 313}, 
                    "$OutputSize" -> {94, 311}, "$WeightsInputChannels" -> 
                    16|>, "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "bn" -> <|
                   "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder3/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder3/bn/Biases"|>], "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "relu" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Nodes", "pad", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "pad", "Outputs", "Output"],
                   NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "relu", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "bn", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "relu", "Outputs", "Output"]}|>, 
              "4" -> <|"Type" -> "Graph", 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Nodes" -> <|
                 "pad" -> <|
                   "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {32, 94, 311}, 
                    "$OutputSize" -> {32, 96, 313}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                  "c" -> <|
                   "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder4/c/Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {96, 313}, 
                    "$OutputSize" -> {94, 311}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "bn" -> <|
                   "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder4/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder4/bn/Biases"|>], "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "relu" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Nodes", "pad", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "pad", "Outputs", "Output"],
                   NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "relu", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "bn", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "relu", "Outputs", "Output"]}|>|>, 
            "Edges" -> {
             NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Inputs", "Input"], 
              NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Outputs", "Output"] -> 
              NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"]}, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{3, 94, 311}, 
                NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{32, 94, 311}, NeuralNetworks`RealT]|>|>,
           "costVolume" -> <|
           "Type" -> "Graph", 
            "Inputs" -> <|
             "fLeft" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                NeuralNetworks`RealT], "fRight" -> 
              NeuralNetworks`TensorT[{32, 94, 311}, NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{64, 33, 94, 311}, 
                NeuralNetworks`AtomT]|>, 
            "Nodes" -> <|
             "left" -> <|
               "Type" -> "Chain", 
                "Nodes" -> <|
                 "1" -> <|
                   "Type" -> "Replicate", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[33], 
                    "Level" -> 1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{33, 32, 94, 311}, 
                    NeuralNetworks`AtomT]|>|>, 
                  "2" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Transpose[#, {2, 1, 3, 4}]& ), 
                    "Net" -> <|
                    "Type" -> "Transpose", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> 
                    NeuralNetworks`ValidatedParameter[{2, 1, 3, 4}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{33, 32, 94, 311}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{33, 32, 94, 311}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"]}, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`AtomT]|>|>, 
              "right" -> <|
               "Type" -> "Graph", 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Nodes" -> <|
                 "1" -> <|
                   "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> {{0, 0}, {0, 0}, {32, 0}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {32, 94, 311}, 
                    "$OutputSize" -> {32, 94, 343}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>|>, 
                  "2" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[33, 343]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "3" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[32, 342]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "4" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[31, 341]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "5" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[30, 340]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "6" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[29, 339]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "7" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[28, 338]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "8" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[27, 337]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "9" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[26, 336]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "10" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[25, 335]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "11" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[24, 334]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "12" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[23, 333]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "13" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[22, 332]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "14" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[21, 331]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "15" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[20, 330]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "16" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[19, 329]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "17" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[18, 328]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "18" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[17, 327]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "19" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[16, 326]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "20" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[15, 325]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "21" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[14, 324]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "22" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[13, 323]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "23" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[12, 322]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "24" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[11, 321]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "25" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[10, 320]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "26" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[9, 319]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "27" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[8, 318]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "28" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[7, 317]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "29" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[6, 316]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "30" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[5, 315]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "31" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[4, 314]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "32" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[3, 313]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "33" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[2, 312]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "34" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[1, 311]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "35" -> <|
                   "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|
                    "Input1" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input3" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input4" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input5" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input6" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input7" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input8" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input9" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input10" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input11" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input12" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input13" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input14" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input15" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input16" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input17" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input18" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input19" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input20" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input21" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input22" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input23" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input24" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input25" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input26" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input27" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input28" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input29" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input30" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input31" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input32" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input33" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{33, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "36" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Transpose[#, {2, 1, 3, 4}]& ), 
                    "Net" -> <|
                    "Type" -> "Transpose", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> 
                    NeuralNetworks`ValidatedParameter[{2, 1, 3, 4}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{33, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{33, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "20", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "21", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "22", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "23", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "24", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "25", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "26", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "27", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "28", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "29", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "30", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "31", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "32", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "33", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "34", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input1"] -> 
                  NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input2"] -> 
                  NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input3"] -> 
                  NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input4"] -> 
                  NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input5"] -> 
                  NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input6"] -> 
                  NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input7"] -> 
                  NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input8"] -> 
                  NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input9"] -> 
                  NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input10"] -> 
                  NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input11"] -> 
                  NeuralNetworks`NetPath["Nodes", "12", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input12"] -> 
                  NeuralNetworks`NetPath["Nodes", "13", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input13"] -> 
                  NeuralNetworks`NetPath["Nodes", "14", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input14"] -> 
                  NeuralNetworks`NetPath["Nodes", "15", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input15"] -> 
                  NeuralNetworks`NetPath["Nodes", "16", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input16"] -> 
                  NeuralNetworks`NetPath["Nodes", "17", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input17"] -> 
                  NeuralNetworks`NetPath["Nodes", "18", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input18"] -> 
                  NeuralNetworks`NetPath["Nodes", "19", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input19"] -> 
                  NeuralNetworks`NetPath["Nodes", "20", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input20"] -> 
                  NeuralNetworks`NetPath["Nodes", "21", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input21"] -> 
                  NeuralNetworks`NetPath["Nodes", "22", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input22"] -> 
                  NeuralNetworks`NetPath["Nodes", "23", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input23"] -> 
                  NeuralNetworks`NetPath["Nodes", "24", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input24"] -> 
                  NeuralNetworks`NetPath["Nodes", "25", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input25"] -> 
                  NeuralNetworks`NetPath["Nodes", "26", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input26"] -> 
                  NeuralNetworks`NetPath["Nodes", "27", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input27"] -> 
                  NeuralNetworks`NetPath["Nodes", "28", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input28"] -> 
                  NeuralNetworks`NetPath["Nodes", "29", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input29"] -> 
                  NeuralNetworks`NetPath["Nodes", "30", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input30"] -> 
                  NeuralNetworks`NetPath["Nodes", "31", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input31"] -> 
                  NeuralNetworks`NetPath["Nodes", "32", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input32"] -> 
                  NeuralNetworks`NetPath["Nodes", "33", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input33"] -> 
                  NeuralNetworks`NetPath["Nodes", "34", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "36", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "35", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "36", "Outputs", "Output"]}|>, 
              "concat" -> <|
               "Type" -> "Catenate", "Arrays" -> <||>, 
                "Parameters" -> <|"Level" -> 1|>, 
                "Inputs" -> <|
                 "Input1" -> 
                  NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`AtomT], "Input2" -> 
                  NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{64, 33, 94, 311}, 
                    NeuralNetworks`AtomT]|>|>|>, 
            "Edges" -> {
             NeuralNetworks`NetPath["Nodes", "left", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Inputs", "fLeft"], 
              NeuralNetworks`NetPath["Nodes", "right", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Inputs", "fRight"], 
              NeuralNetworks`NetPath["Nodes", "concat", "Inputs", "Input1"] -> 
              NeuralNetworks`NetPath["Nodes", "left", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "concat", "Inputs", "Input2"] -> 
              NeuralNetworks`NetPath["Nodes", "right", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Outputs", "Output"] -> 
              NeuralNetworks`NetPath[
               "Nodes", "concat", "Outputs", "Output"]}|>, 
          "processedCost" -> <|
           "Type" -> "Chain", 
            "Nodes" -> <|
             "1" -> <|"Type" -> "Graph", 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{64, 33, 94, 311}, 
                    NeuralNetworks`AtomT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Nodes" -> <|
                 "pad" -> <|
                   "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}, {1, 1}}, 
                    "Padding" -> "Fixed", "$Rank" -> 4, 
                    "$InputSize" -> {64, 33, 94, 311}, 
                    "$OutputSize" -> {64, 35, 96, 313}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 33, 94, 311}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 96, 313}, 
                    NeuralNetworks`AtomT]|>|>, 
                  "c" -> <|
                   "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{32, 64, 3, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3, 3}, 
                    "Stride" -> {1, 1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 3, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {35, 96, 313}, 
                    "$OutputSize" -> {33, 94, 311}, "$WeightsInputChannels" -> 
                    64|>, "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 96, 313}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "bn" -> <|
                   "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Biases" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {33, 94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "relu" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 33, 94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Nodes", "pad", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "pad", "Outputs", "Output"],
                   NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "relu", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "bn", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "relu", "Outputs", "Output"]}|>, 
              "2" -> <|"Type" -> "Graph", 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Nodes" -> <|
                 "pad" -> <|
                   "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}, {1, 1}}, 
                    "Padding" -> "Fixed", "$Rank" -> 4, 
                    "$InputSize" -> {32, 33, 94, 311}, 
                    "$OutputSize" -> {32, 35, 96, 313}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 35, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
                  "c" -> <|
                   "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{32, 32, 3, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3, 3}, 
                    "Stride" -> {1, 1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 3, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {35, 96, 313}, 
                    "$OutputSize" -> {33, 94, 311}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 35, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "bn" -> <|
                   "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Biases" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {33, 94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                  "relu" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 33, 94, 311}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Nodes", "pad", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "pad", "Outputs", "Output"],
                   NeuralNetworks`NetPath["Nodes", "bn", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "relu", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "bn", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "relu", "Outputs", "Output"]}|>, 
              "3" -> <|"Type" -> "Padding", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Specification" -> {{0, 0}, {1, 1}, {1, 1}, {1, 1}}, 
                  "Padding" -> "Fixed", "$Rank" -> 4, 
                  "$InputSize" -> {32, 33, 94, 311}, 
                  "$OutputSize" -> {32, 35, 96, 313}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{32, 35, 96, 313}, 
                    NeuralNetworks`RealT]|>|>, 
              "4" -> <|"Type" -> "Convolution", 
                "Arrays" -> <|
                 "Weights" -> 
                  NeuralNetworks`TensorT[{1, 32, 3, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None|>, 
                "Parameters" -> <|
                 "OutputChannels" -> 1, "KernelSize" -> {3, 3, 3}, 
                  "Stride" -> {1, 1, 1}, 
                  "PaddingSize" -> {{0, 0}, {0, 0}, {0, 0}}, 
                  "Dilation" -> {1, 1, 1}, "ChannelGroups" -> 1, 
                  "Dimensionality" -> 3, "Interleaving" -> False, 
                  "$InputChannels" -> 32, "$InputSize" -> {35, 96, 313}, 
                  "$OutputSize" -> {33, 94, 311}, "$WeightsInputChannels" -> 
                  32|>, "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{32, 35, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{1, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
            "Edges" -> {
             NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Inputs", "Input"], 
              NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Outputs", "Output"] -> 
              NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"]}, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{64, 33, 94, 311}, 
                NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{1, 33, 94, 311}, 
                NeuralNetworks`RealT]|>|>, 
          "disparity" -> <|
           "Type" -> "Graph", 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{1, 33, 94, 311}, 
                NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{94, 311}, NeuralNetworks`RealT]|>, 
            "Nodes" -> <|
             "dispRange" -> <|
               "Type" -> "NetArray", 
                "Arrays" -> <|
                 "Array" -> 
                  RawArray["Real32",{0., 1., 2., 3., 4., 5., 6., 7., 8., 9., 
                    10., 11., 12., 13., 14., 15., 16., 17., 18., 19., 20., 
                    21., 22., 23., 24., 25., 26., 27., 28., 29., 30., 31., 
                    32.}]|>, 
                "Parameters" -> <|
                 "Dimensions" -> 
                  NeuralNetworks`TensorT[{33}, NeuralNetworks`AtomT], 
                  "$ArrayDimensions" -> {33}|>, "Inputs" -> <||>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{33}, NeuralNetworks`AtomT]|>, 
                "TrainingParameters" -> <|"LearningRateMultipliers" -> 0|>|>, 
              "cost" -> <|
               "Type" -> "Part", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Specification" -> NeuralNetworks`ValidatedParameter[{1}]|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{1, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
              "transposed" -> <|
               "Type" -> "Transpose", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Specification" -> 
                  NeuralNetworks`ValidatedParameter[{3, 1, 2}]|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{94, 311, 33}, 
                    NeuralNetworks`RealT]|>|>, 
              "probabilities" -> <|
               "Type" -> "Softmax", "Arrays" -> <||>, 
                "Parameters" -> <|"Level" -> 3|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{94, 311, 33}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{94, 311, 33}, 
                    NeuralNetworks`RealT]|>|>, 
              "disparityMap" -> <|
               "Type" -> "Dot", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "TransposeSpecifications" -> 
                  NeuralNetworks`ValidatedParameter[None]|>, 
                "Inputs" -> <|
                 "Input1" -> 
                  NeuralNetworks`TensorT[{94, 311, 33}, NeuralNetworks`RealT],
                   "Input2" -> 
                  NeuralNetworks`TensorT[{33}, NeuralNetworks`AtomT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
            "Edges" -> {
             NeuralNetworks`NetPath["Nodes", "cost", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Inputs", "Input"], 
              NeuralNetworks`NetPath[
               "Nodes", "disparityMap", "Inputs", "Input2"] -> 
              NeuralNetworks`NetPath[
               "Nodes", "dispRange", "Outputs", "Output"], 
              NeuralNetworks`NetPath[
               "Nodes", "transposed", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "cost", "Outputs", "Output"], 
              NeuralNetworks`NetPath[
               "Nodes", "probabilities", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath[
               "Nodes", "transposed", "Outputs", "Output"], 
              NeuralNetworks`NetPath[
               "Nodes", "disparityMap", "Inputs", "Input1"] -> 
              NeuralNetworks`NetPath[
               "Nodes", "probabilities", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Outputs", "Output"] -> 
              NeuralNetworks`NetPath[
               "Nodes", "disparityMap", "Outputs", "Output"]}|>, 
          "output" -> <|
           "Type" -> "Catenate", "Arrays" -> <||>, 
            "Parameters" -> <|"Level" -> 0|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{94, 311}, 
                NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{1, 94, 311}, 
                NeuralNetworks`RealT]|>|>|>, 
        "Edges" -> {
         NeuralNetworks`NetPath["Nodes", "featuresLeft", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Inputs", "iLeft"], 
          NeuralNetworks`NetPath["Nodes", "featuresRight", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Inputs", "iRight"], 
          NeuralNetworks`NetPath["Nodes", "costVolume", "Inputs", "fLeft"] -> 
          NeuralNetworks`NetPath[
           "Nodes", "featuresLeft", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "costVolume", "Inputs", "fRight"] -> 
          NeuralNetworks`NetPath[
           "Nodes", "featuresRight", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "processedCost", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "costVolume", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "disparity", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath[
           "Nodes", "processedCost", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "output", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "disparity", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Outputs", "Output"] -> 
          NeuralNetworks`NetPath["Nodes", "output", "Outputs", "Output"]}|>, 
      "loss" -> <|
       "Type" -> "Graph", 
        "Inputs" -> <|
         "Target" -> 
          NeuralNetworks`TensorT[{1, 94, 311}, NeuralNetworks`RealT], "Input" -> 
          NeuralNetworks`TensorT[{1, 94, 311}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Nodes" -> <|
         "mask" -> <|
           "Type" -> "Elementwise", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> 
              NeuralNetworks`ValidatedParameter[UnitStep[-1.*^-6 + #]& ], 
              "$Dimensions" -> {1, 94, 311}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{1, 94, 311}, 
                NeuralNetworks`RealT]|>, 
            "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 94, 311}, 
                NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
          "n" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> Total, "Levels" -> 
              NeuralNetworks`ValidatedParameter[All]|>, 
            "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1, 94, 311}, 
                NeuralNetworks`IndexIntegerT[0, 1]]|>, 
            "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                NeuralNetworks`IndexIntegerT[0, 
                 DirectedInfinity[1]]]|>|>, 
          "diff" -> <|
           "Type" -> "Graph", 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{1, 94, 311}, 
                NeuralNetworks`RealT], "Target" -> 
              NeuralNetworks`TensorT[{1, 94, 311}, NeuralNetworks`RealT], 
              "mask" -> NeuralNetworks`TensorT[{1, 94, 311}, 
                NeuralNetworks`IndexIntegerT[0, 1]]|>, 
            "Outputs" -> <|
             "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
            "Nodes" -> <|
             "1" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> NeuralNetworks`ValidatedParameter[#3 Abs[
                    Subtract[#, #2]]& ], "Broadcasting" -> 
                  NeuralNetworks`ValidatedParameter[-1]|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{1, 94, 311}, NeuralNetworks`RealT], 
                  "Target" -> 
                  NeuralNetworks`TensorT[{1, 94, 311}, NeuralNetworks`RealT], 
                  "mask" -> NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
              "2" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> Total, "Levels" -> 
                  NeuralNetworks`ValidatedParameter[All]|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
            "Edges" -> {
             NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Inputs", "Input"], 
              NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Target"] -> 
              NeuralNetworks`NetPath["Inputs", "Target"], 
              NeuralNetworks`NetPath["Nodes", "1", "Inputs", "mask"] -> 
              NeuralNetworks`NetPath["Inputs", "mask"], 
              NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Outputs", "Output"] -> 
              NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"]}|>, 
          "mean" -> <|
           "Type" -> "Threading", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> NeuralNetworks`ValidatedParameter[Divide[#, #2]& ],
               "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>, 
            "Inputs" -> <|
             "diff" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], "n" -> 
              NeuralNetworks`TensorT[{}, 
                NeuralNetworks`IndexIntegerT[0, 
                 DirectedInfinity[1]]]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
        "Edges" -> {
         NeuralNetworks`NetPath["Nodes", "mask", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Inputs", "Target"], 
          NeuralNetworks`NetPath["Nodes", "diff", "Inputs", "Target"] -> 
          NeuralNetworks`NetPath["Inputs", "Target"], 
          NeuralNetworks`NetPath["Nodes", "diff", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Inputs", "Input"], 
          NeuralNetworks`NetPath["Nodes", "diff", "Inputs", "mask"] -> 
          NeuralNetworks`NetPath["Nodes", "mask", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "n", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "mask", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "mean", "Inputs", "n"] -> 
          NeuralNetworks`NetPath["Nodes", "n", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "mean", "Inputs", "diff"] -> 
          NeuralNetworks`NetPath["Nodes", "diff", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Outputs", "Output"] -> 
          NeuralNetworks`NetPath["Nodes", "mean", "Outputs", "Output"]}|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "disparity", "Inputs", "iLeft"] -> 
      NeuralNetworks`NetPath["Inputs", "iLeft"], 
      NeuralNetworks`NetPath["Nodes", "disparity", "Inputs", "iRight"] -> 
      NeuralNetworks`NetPath["Inputs", "iRight"], 
      NeuralNetworks`NetPath["Nodes", "loss", "Inputs", "Target"] -> 
      NeuralNetworks`NetPath["Inputs", "iDispLeft"], 
      NeuralNetworks`NetPath["Nodes", "loss", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "disparity", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "disparity", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Loss"] -> 
      NeuralNetworks`NetPath["Nodes", "loss", "Outputs", "Output"]}, 
    "SharedArrays" -> <|
     "encoder1/bn/Biases" -> 
      NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
      "encoder1/bn/Scaling" -> 
      NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
      "encoder1/c/Weights" -> 
      NeuralNetworks`TensorT[{16, 3, 3, 3}, NeuralNetworks`RealT], 
      "encoder2/bn/Biases" -> 
      NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
      "encoder2/bn/Scaling" -> 
      NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
      "encoder2/c/Weights" -> 
      NeuralNetworks`TensorT[{16, 16, 3, 3}, NeuralNetworks`RealT], 
      "encoder3/bn/Biases" -> 
      NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
      "encoder3/bn/Scaling" -> 
      NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
      "encoder3/c/Weights" -> 
      NeuralNetworks`TensorT[{32, 16, 3, 3}, NeuralNetworks`RealT], 
      "encoder4/bn/Biases" -> 
      NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
      "encoder4/bn/Scaling" -> 
      NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
      "encoder4/c/Weights" -> 
      NeuralNetworks`TensorT[{32, 32, 3, 3}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.1.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.939388260715457*^9, 3.9393882926840353`*^9, 3.9393992387607327`*^9, 
   3.940889144069169*^9, 3.940896684357778*^9, 3.9408967579220753`*^9, 
   3.9408979744635277`*^9, 3.940898190090629*^9, 3.940901958384927*^9, 
   3.940902101573986*^9, 3.940902167533943*^9, {3.940902950097891*^9, 
   3.9409029650340652`*^9}, 3.940908276064286*^9, 3.9409095203368893`*^9, 
   3.9409731606790648`*^9, 3.940973307393086*^9, 3.940975032120843*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"5aaed817-24f8-4271-8f0c-e9dee57e235f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netTrainResult", "=", "\[IndentingNewLine]", 
  RowBox[{"NetTrain", "[", "\[IndentingNewLine]", 
   RowBox[{
   "tn", ",", "\[IndentingNewLine]", "dataTrain", ",", "\[IndentingNewLine]", 
    "All", ",", "\[IndentingNewLine]", 
    RowBox[{"ValidationSet", "->", "dataValid"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"BatchSize", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "10"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"LossFunction", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Loss\>\"", "\[Rule]", 
       RowBox[{"Scaled", "[", "1", "]"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<ADAM\>\"", ",", 
       RowBox[{"LearningRate", "\[Rule]", "0.001"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"WorkingPrecision", "\[Rule]", "\"\<Real32\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.871745605123548*^9, 3.871745632082499*^9}, 
   3.871745662969962*^9, {3.871746446793836*^9, 3.871746473097085*^9}, {
   3.8717466785602922`*^9, 3.871746679801323*^9}, {3.871747984251375*^9, 
   3.8717479901973057`*^9}, 3.871748151344522*^9, 3.871748431472732*^9, 
   3.87174848472325*^9, 3.8717485261191998`*^9, {3.871990056279756*^9, 
   3.87199005903867*^9}, {3.939384284744483*^9, 3.939384309241387*^9}, {
   3.9393852685288343`*^9, 3.939385270153029*^9}, 3.939385306067028*^9, {
   3.9393882928999557`*^9, 3.939388303271936*^9}, {3.9408980342513647`*^9, 
   3.940898034463785*^9}, {3.940900839301593*^9, 3.940900839383164*^9}, 
   3.94090594942832*^9, {3.940908261540566*^9, 3.940908263657482*^9}, {
   3.9409095086099787`*^9, 3.940909512102586*^9}, {3.9409745429704037`*^9, 
   3.940974548931143*^9}, {3.9409750538405237`*^9, 3.9409750855145206`*^9}, {
   3.940975189931954*^9, 3.940975192262217*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"6871d1c4-0bf4-46f0-b217-e54a4f2b5b8a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   TagBox["NetTrainResultsObject",
    "SummaryHead"], "NonInterpretableSummary"], 
  StyleBox["[", "NonInterpretableSummary"], 
  FrameBox[GridBox[{
     {
      ItemBox[
       FrameBox[
        StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
         StripOnInput->False,
         FontSize->12],
        FrameMargins->{{10, 5}, {-4, 2}},
        FrameStyle->None,
        StripOnInput->False],
       Alignment->{Left, Bottom},
       Background->RGBColor[0.96, 0.96, 0.96],
       Frame->{{False, False}, {True, False}},
       FrameStyle->Opacity[0.1],
       ItemSize->{Automatic, 1},
       StripOnInput->False]},
     {
      ItemBox[
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["summary"], 
                 TextCell["summary"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batches:"], 
                  TextCell["batches:"]], "600"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["rounds:"], 
                  TextCell["rounds:"]], "10"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["time:"], 
                  TextCell["time:"]], 
                 InterpretationBox[
                  Cell["7.5min"], 
                  TextCell["7.5min"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["examples/s:"], 
                  TextCell["examples/s:"]], 
                 TagBox[
                  InterpretationBox[
                   StyleBox["\"2.7\"", ShowStringCharacters -> False], 
                   2.664676751205409, AutoDelete -> True], 
                  NumberForm[#, 2]& ]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["data"], 
                 TextCell["data"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["training examples:"], 
                  TextCell["training examples:"]], "120"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["validation examples:"], 
                  TextCell["validation examples:"]], "40"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["processed examples:"], 
                  TextCell["processed examples:"]], "1200"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["skipped examples:"], 
                  TextCell["skipped examples:"]], "0"}, "RowWithSeparators"]},
              
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["method"], 
                 TextCell["method"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["ADAM"], 
                  TextCell["ADAM"]], 
                 InterpretationBox[
                  Cell["optimizer"], 
                  TextCell["optimizer"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batch size"], 
                  TextCell["batch size"]], "2"}, "RowWithSeparators"], 
               InterpretationBox[
                Cell["GPU"], 
                TextCell["GPU"]]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["round"], 
                 TextCell["round"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox["\"3.47\"", ShowStringCharacters -> False], 
                   3.474082913001378, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["validation"], 
                 TextCell["validation"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox["\"3.49\"", ShowStringCharacters -> False], 
                   3.4871592760086063`, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             ItemBox[GridBox[{
                {"", 
                 ItemBox["\<\"rounds\"\>",
                  DefaultBaseStyle->"LabeledLabel"]},
                {
                 RotationBox[
                  ItemBox["\<\"loss\"\>",
                   DefaultBaseStyle->"LabeledLabel"],
                  BoxRotation->1.5708], 
                 GraphicsBox[
                  {AbsoluteThickness[1.25], {
                    {Hue[0.083, 1., 1.], LineBox[CompressedData["
1:eJw113lcjQkXB/DbTqW6bbe6LXeRvYQJ2c6hQgvKEhoRBk2WBkkhBsOEsjdk
S1myVMbWSERhLO80Whiy5D7LvZWihYpS3ut4Ov/0uZ/ndp/z/d3nOee58nlR
kxfoikSifjoi0be/Yqo0SGhI2/c06x18f30RRHkZYdOrauBQyrfKBY9Qix0v
3tcKxwsgVk8n8I5hDUyjugcJ0UtNPp2rAXp7ykNoDN+xpXF/NbymKoIejuIE
vQlvhf8vAf9Fzp9Wx1bBIKoyqLoUtiU7rlL4vKeAr9znXbxSCaupnoGobL5D
yYpK4fPL4ay5tM/V+VWQR/USDrbWB4wZUyOc7zUUn2RDAo5WwleqN+C6vHHW
0FNVwvkZqJ6yhon9Ww0KKhbs9x+RPj1eKfTDwW87bzTPkVWDDxUP/XZseyyP
1gj9qcG0oEnn8sRKWEilAY+1zzJS/aqEfiuh7V6un3eBGhKoqiD1afOofqLO
/qvBoWWmcuoDHs5RaXORJVulaTSCpwbWtBfCun4a+IeqFrKmWLUfgErB9w5q
y2SVWTN5eP+9YFXpBAnX1Omtg+cxd062N3aevx4SZ/Wv8xtVKfgb4JeVF965
dVML328DKCZIO7LHqkFJeTTC4WnNp/OCKyGT+muEjokxmSYHePCkfD7Aifiq
+Mh2NeRTvx/g+qn9cSNteRhHeX0EyfiK/DYzNRRT/x+h9HSgYm+IGmZSfk2w
4kLKmanxamDJ0wSs2R9pXpk8LKY8myFfvL6yXF8NH4nXDGsMN05JGVUF8ZRv
C6wfmV+b7qkGQ9G3+gQSaewu76Aq2EXeT5AfcrIgO58HO/J+hqflHhGb/+Ih
jbyfwethL8Zwuhr6kLcVhj9qub0vg4fL5G2FhPcHd++x1MAI8rbBHzmRx6ed
0cA98rbBqKujG12/cjCRvF8gYET3HZc2c/CMvF9A56LRwNJLaggnbzv0lvec
mBfIQTV52yE8qb521xk1rCBvB8SbRo685c5DG3k7oH70i7THBjz8Rt6vcDho
w8P1rp1eEc62Px6q68SCP51fhLNW3037+QIHO8kvwjOxpXOio3gopX5EGLt+
xnMjRx5sKQ8dPFhsX1vzWg2h1J8OTgosfBu/RA3HKB8dDLnZMPbrK174fnRw
SX/PG+vfs9CD8tLFuikuzyM7OIik/nVxmbeyMuggB9mUny4mV6i2B7bw0Ege
XbQTJS0YeY+DwZSnHu665eJssZOHNeTTQ8vYgF//9ui8nvTw0s05EYUlPOgS
Vx/FmdPct2vv17Hk1cehDlA7fDUP28mrj8okT7eKSRz8S159nLS3eO5F7X1s
SV4DtPSrtioI5iGEvAb4u0TiXH+n8/o3wLYBiWVLWA4qyGuAruNqvLO0+X6f
D4a4t3ThkUfJvHC/G2JSo39Z2NHO+9cQC/dnWkRqr/fvt6Mhpk89dDgmiYOB
5DXCUKfBCR2hHMSQ1wh1bkRl/NTEwXXyGuG1K+99f8rhoIPuXyOcrTfTu2ld
FYwhbxfsN766Vq1bBVvJ2wVtZTc1x69y8Ii8XXDT9eLQuQwHZuTtiv2NP7ht
0r6eTN6uqDn09pOPjwb+IG9XrP8gdxH5cfCCvF1xSaT7rQlyDpzJa4xfjN4Y
DDLnYR55jdFWs6lyjakaTpPXGO1W5S1f0qyGt+Q1Rv65ZOuuYxy4k9cEZ/0w
7V8cpr2+yWuCE2t/ax0+joMc8pqgcXnJqS0aFlrJa4KNH080rxRzMIq8pihb
OVazXztPNpHXFPf9Xhl+4wkHf5PXFAODPzgH7eXBmLzdcLHDlLd9I3mYSN5u
OJvzvZpkysNe8nbDAPP0FwP9OfiPvN1wGJ+ye2s6Cw7kNcPHK+8WK07zMJu8
ZnhOfP5V0A4e0slrhq9aC/8r/I0BDXnN0Cs/+/IqjoM+5DVHV1Np7yXhHCwj
rznO9y8c0KeIg0vkNceLQQ2veGsemslrjjrBJh7VlzlwovNb4OlnuhF6hzn4
vnAssHzz7OvmYRzMpX4ssK08xzkuhIfNlIcF+sh2xiQ9ZuEU9WeB+04W1nwp
4+A+5WOBijGvD4pbWaimfi0wepOl2dW+ajD5vgCwd0RMZNBuDtyofzFmxlnX
xQ3mYBLlJ0bV8ZMWHzeysJw8YrRZHlOn8OJhH+UpRvCMM7rrroar5BNjy+2Z
U8OklfCM8hXjoTt5mx5q8/9MXjG2pUQszv+VAyl5LdEgMeXDMnM1jCSvJe5J
vW8U0oOHOeS1ROO9pnl977OwkbyW2LM+2DZzAQcnyGuJPy+8duBTKQP3yGuJ
yoabrv/o8lBJXksszOaUD+4x0JW4Vtiuc/Dw4BEc9CWvFZa+uDpyjj4LE8hr
haKcCavXiTiIIq8VZp8+kBIVysMe8lphboK0JrGYg8vktUKvDVMS+bMsPCWv
Fb71e7zv6RgWWshrhfZsUenGpdrnCvJao6/enHEWGxkYTl5rvPLvJLvljzQQ
Rl5rNJP9c3dsIAsbyGuN4Wfjd+v35yCNvNbY/S8nB3Dm4A55rTGhoOaJ/QoV
qMlrjYr4RdKhtxgwIq8NDnZLzTLqYKA3eW3QUiopaTnCQgB5bXBZodeH9h9Z
WEpeG+x97mjFnDk87CKvDQ7U27mvJoKHi+S1Qdue17sFv2egjLw2aPxy8iLx
HRaayKt93XR/T1QmCxLy2uIPFXkDz5hx4EVeW/zPYODG1kEM/EheWzy0V5z4
7hAL8eS1xcioIUeN3zGQSl5bHLzmfFHRXB4KyGuLm3f0D/+zmAeOvLZYPiRw
OQRxYEBeCdbWzpqcqO2nJ3klaOhS+PWTGwt+5JVgjsdc8RcvDhaTV4JfZm3e
cjyXhSTySvB5dGaZcZwaLpBXghbRRkMHMGooIa8EF19ycnTbxcAH8kqwV/zk
OUOCWLAhrx16g3VYuna/DSGvHdb53bP0ma993iGvHd7Ag5OjtNfrWvLaoQO3
JuDlWw0cJa8dtiu/tFa/VcEt8trhTxF7Dm1z54Ahrx1ONOr/4M6/LOiR1x6P
pYflOtQw4Epee1w444xIwzIwjrz2eCTM6Pyw8Sr4mbz2+Gta7r5xZizsIK89
6l2xHNjszEMWee0x2TWl3vcGB4/Ja48pW8qK9vRkoIG89liLZ68umsSDFXkd
MLd7ZeKTRBY8yeuAT3osMyvIZ2E6eR3Qx+HzI18DDuLI64Afs18NS5rCwGHy
OuC6VRZ+x7azcJO8DhicU5rcsoGDN+R1wLs1VdeTX7CgQ14ppnw5UR0+gwMl
eaWoEIUXHLjBgC95pfiA/TTL7DYLi8grxSBNRWq9BQfbyCvFa34K14DhHJwn
rxSrvFet3a29HovIK8VHFt1sywwZqCOvFNM92n0tY1gQk9cRg5ZlTRuuZGAQ
eR1Rml/u8LlB+3uAvI4Y/TH1dFCDClaT1xEHpdaVnY5kIYW8jlh/yffm9YQ3
kEdeR6zZ6HHobRsHr8nriBPju0/1f8XAV4tvXif0yTJW9AxmQE5eJ6xLzn5l
qL1evcnrhI/+7HOgVcHAAvI64eQXUxVy7fPd7+R1wmYTtqPLJAbOktcJ/U2g
6UUkB/8jrxP6qdgxrLbfd+R1Qt/6+gi7DQyYk9cZD4x8ya7bycEA8jpjZmzu
cqv61zCFvM54e5rp5GWfGVhFXmf8YcKf4t7zGThAXmcsON/b/789LOSS1xlD
RvYKvl7BwkvyOqOP58kRFdr51U5eF4wKjap5I2XAhbwu+FSn+1jD6SyMJq8L
hgY4PcnZxMB88rqgV0NG7+AYFWwhrwseT04vH6rdDxnkdcHtjh6l7VkMPCSv
C9pZP7877wgDNeR1QZ0i8xUL7nDCvJThRUlZ9gkvBuzIL0OuJdlzym6VMD9l
+Kt7/dwn1gwMozxkuD1E3/rlE5UwT2W4t0/xopB4FmZRPjI8El00pMmkQpiv
MgwfFnHuvfb+XE95yXDsuQh79+0VwryV4Xsro5L65So4TvnJMDr55SVDVAnz
V4ahQ9V3u+xnoZDylKFepOXVGds757EMB+PuzT3sVcBTvjLMXvDO269cI8xn
GaLphQdrDRgwJK8cJXGBgeMmMsK8lqPv4A4Ua/PvRV45Nm/ot6I0mRHmtxxz
G7fJVz9XgT955WiaUuc5zI0T5rkcY7ZcGx22jYEl5JVjgtup34cXMsJ8l+Pj
ATlmnnYM7CSvHM2k0z3nBXXOe+37t/4RsqBEBX+SV477/vJXOs5khPkvR9fT
WYUmCg5KySvHioM7fbMbWGEfyNGuQT9vcQEDH8krx7y5qbYySed+UKC+5/p/
rDpUYPv9gR5j0411d2Z37gsFLvv6c8btmywMJa8Cr/h02xi3u3N/KNDD0Cd5
6AkVhJJXgXrMUt8bixlhnyiw70Ib546zKlhHXu1xz4y2KrFK2C8KtJ5RsvKv
H17BMfIqMGFMSdJj9zfCvlFgCF8+vtcBFdwmrwKDdDLsz4+sEPaPArmwgoFG
z94AS14FykXN/n31VcI+UuDH1UPMHHowoE9eJa6977S0ZcYbYT8pUfajhceK
Hhz0IK9S+/th3P2f9qiEfaXE6IEPL9l+YWA8eZX4PG3uwaitjLC/lBi+x6Og
dZoKIsmrxBej9YPP3lAJ+0yJ1971jTHvzUAieZWYewTuz8xSC/tNiSFOHoYn
tMezyavEH28HxC582LnvlFiTkVC4IF8FxeRV4tJfSi//ksQI+0+JI4pCVyTO
VUMjeZWY6mW6JOMyA/8HCub0yA==
                    "]]}, {}}, {
                    {Hue[0.59, 0.7, 0.75], 
                    LineBox[{{0.9698996655518394, 0.6977616878360915}, {
                    1.9732441471571907`, 0.6456671763016222}, {
                    2.9765886287625416`, 0.6279036686802506}, {
                    3.979933110367893, 0.6157489188754378}, {
                    4.983277591973244, 0.6066705199205986}, {
                    5.986622073578595, 0.6042846832919035}, {
                    6.989966555183946, 0.5845488422472009}, {
                    7.993311036789297, 0.5682245688826166}, {
                    8.996655518394649, 0.5568985258699133}, {10., 
                    0.5424717842305454}}]}, 
                    {Hue[0.59, 0.7, 0.65], AbsolutePointSize[
                    3.8333333333333335`], 
                    PointBox[{{0.9698996655518394, 0.6977616878360915}, {
                    1.9732441471571907`, 0.6456671763016222}, {
                    2.9765886287625416`, 0.6279036686802506}, {
                    3.979933110367893, 0.6157489188754378}, {
                    4.983277591973244, 0.6066705199205986}, {
                    5.986622073578595, 0.6042846832919035}, {
                    6.989966555183946, 0.5845488422472009}, {
                    7.993311036789297, 0.5682245688826166}, {
                    8.996655518394649, 0.5568985258699133}, {10., 
                    0.5424717842305454}}]}}},
                  AspectRatio->Full,
                  Axes->None,
                  Background->GrayLevel[1],
                  
                  BaseStyle->{
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6},
                  Frame->True,
                  FrameStyle->GrayLevel[0.5],
                  FrameTicks->None,
                  GridLines->{{2., 4., 6., 8., 10.}, {{0., 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}, {0.30102999566398114`, 
                    GrayLevel[0.8501]}, {0.47712125471966244`, 
                    GrayLevel[0.8501]}, {0.6020599913279623, 
                    GrayLevel[0.8501]}, {0.6989700043360187, 
                    GrayLevel[0.8501]}, {0.7781512503836435, 
                    GrayLevel[0.8501]}, {0.8450980400142567, 
                    GrayLevel[0.8501]}, {0.9030899869919434, 
                    GrayLevel[0.8501]}, {0.9542425094393249, 
                    GrayLevel[0.8501]}, {1.301029995663981, 
                    GrayLevel[0.8501]}, {1.4771212547196624`, 
                    GrayLevel[0.8501]}, {1.6020599913279623`, 
                    GrayLevel[0.8501]}, {1.6989700043360185`, 
                    GrayLevel[0.8501]}, {1.7781512503836434`, 
                    GrayLevel[0.8501]}, {1.845098040014257, 
                    GrayLevel[0.8501]}, {1.9030899869919433`, 
                    GrayLevel[0.8501]}, {1.9542425094393248`, 
                    GrayLevel[0.8501]}}},
                  ImagePadding->1,
                  ImageSize->{302, 182.},
                  
                  PlotRange->{{0, 10.008333333333333`}, {0.08900000000000001, 
                    1.211}},
                  PlotRangeClipping->True,
                  PlotRangePadding->None,
                  Prolog->{{
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{-2, -2}, {2., 1.211}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{-2, -2}, {4., 1.211}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{-2, -2}, {6., 1.211}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{-2, -2}, {8., 1.211}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    Offset[{-2, -2}, {10., 1.211}], 
                    ImageScaled[{1., 1.}]]}, {
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    Offset[{3, 0}, {0, 1.}], 
                    ImageScaled[{0, 0.}]]}}]}
               },
               
               BaseStyle->{
                FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                 GrayLevel[0.4]},
               
               GridBoxAlignment->{
                "Columns" -> {{Center}}, "Rows" -> {{Center}}},
               GridBoxSpacings->{"Columns" -> {{0.5}}}],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"},
            {
             ItemBox[
              StyleBox[
               RowBox[{
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.083, 1., 1.],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.59, 0.7, 0.75],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
               FontFamily->"Verdana",
               FontSize->8,
               FontColor->GrayLevel[0.4]],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           ColumnsEqual->False,
           
           GridBoxAlignment->{
            "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {False, {
                Opacity[0.15]}, False}},
           GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], 
               Offset[1.1199999999999999`], {
                Offset[1.75]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.8]}, 
               Offset[0.2]}}],
          "Grid"],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       Alignment->Center,
       BaseStyle->{
        FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
         NumberMarks -> False, Deployed -> False},
       StripOnInput->False]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], 
        Offset[0.8], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Background->GrayLevel[1],
   FrameMargins->{{0, 0}, {0, 0}},
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False], 
  StyleBox["]", "NonInterpretableSummary"]}]], "Output",
 CellChangeTimes->{
  3.940897562168208*^9, 3.940898017381611*^9, {3.940898051373942*^9, 
   3.9408980745170517`*^9}, 3.9408986643669977`*^9, 3.940901644701532*^9, 
   3.940903753498569*^9, 3.940907463490611*^9, 3.940909059112685*^9, 
   3.9409103777600327`*^9, 3.940973168518958*^9, 3.9409733231858053`*^9, 
   3.940974550578905*^9, {3.940975044005644*^9, 3.940975067093893*^9}, 
   3.9409756488652153`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"6a8c46ca-15a0-4536-8aae-33d91aee49fb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.939384937403276*^9, 
  3.939384948486968*^9}},ExpressionUUID->"b87c7f21-3c83-473d-bccd-\
2c7d5ff1f3e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trained", "=", 
  RowBox[{"netTrainResult", "[", "\"\<TrainedNet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.939385000600119*^9, 3.939385007322214*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"86761063-a2b0-4b80-b221-e385bebb767f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {11.172421875, {0., 11.172421875}}], 
                   Appearance -> None, BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 
                    20.}, {19.903200149536133`, 16.}, {17.903200149536133`, 
                    14.}, {13.903200149536133`, 14.}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    16.}, {7.903200149536133, 20.}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    12.}, {7.903200149536133, 8.}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8313725490196079, 0.4117647058823529, 
                    0.12941176470588237`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {
                    18., 21.}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {
                    12., 16.}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6.,
                     21.}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 
                    10.}}}]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                  GrayLevel[1], ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{-2, 30}, {-2, 30}}], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["3", "SummaryItem"], "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["2", "SummaryItem"], "SummaryItem"]}}, 
                  AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
             GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"], 
                    ImageSizeCache -> {11.172421875, {0., 11.172421875}}], 
                   Appearance -> None, BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 
                    20.}, {19.903200149536133`, 16.}, {17.903200149536133`, 
                    14.}, {13.903200149536133`, 14.}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    16.}, {7.903200149536133, 20.}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    12.}, {7.903200149536133, 8.}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8313725490196079, 0.4117647058823529, 
                    0.12941176470588237`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {
                    18., 21.}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {
                    12., 16.}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6.,
                     21.}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 
                    10.}}}]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                  GrayLevel[1], ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{-2, 30}, {-2, 30}}], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetGraph`selection = None}, 
                    GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"iDispLeft\"", 
                    
                    Offset[{0, -9}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"loss\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-41, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -20.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"iLeft\"", 
                    
                    Offset[{0, -9}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"disparity\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-41, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -20.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"iRight\"", 
                    
                    Offset[{0, -9}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    
                    Offset[{0, -9}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Loss\"", 
                    Offset[{0, -9}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, 
                    StripOnInput -> False, FontColor -> 
                    RGBColor[0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]], 
                    StyleBox[{
                    InsetBox[
                    StyleBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"94\"", "\"311\""}, "RowWithSeparators"], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{2.1435917623294266`*^-7, 
                    5.499999999999996}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999992, -3.8974395678716846`*^-8}], 
                    InsetBox[
                    StyleBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"94\"", "\"311\""}, "RowWithSeparators"], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{-4.532230505142574, 
                    3.1159086392664173`}, {-2.4499999852628056`, 
                    0.5500000656474976}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.5665288435029849,
                     0.8240419100259225}], 
                    InsetBox[
                    StyleBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"94\"", "\"311\""}, "RowWithSeparators"], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{2.1435917574308395`*^-7, 
                    5.4999999999999964`}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999993, -3.897439558965163*^-8}], 
                    InsetBox[
                    StyleBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"94\"", "\"311\""}, "RowWithSeparators"], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{2.1435917574308395`*^-7, 
                    5.4999999999999964`}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999993, -3.897439558965163*^-8}], 
                    InsetBox[
                    StyleBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"94\"", "\"311\""}, "RowWithSeparators"], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{4.532230661050466, 
                    3.1159084124913003`}, {-1.4499999879422958`, 
                    0.4500000388526005}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.5665288022711455, -0.824041938372812}], 
                    InsetBox[
                    StyleBox[
                    "\"\[DoubleStruckCapitalR]\"", StripOnInput -> False, 
                    LineColor -> RGBColor[
                    0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{2.1435917623294266`*^-7, 
                    5.499999999999996}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999992, -3.8974395678716846`*^-8}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"iDispLeft\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"iDispLeft", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"iLeft\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"iLeft\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 3\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"iLeft", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "iLeft"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"iRight\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"iRight\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 3\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"iRight", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "iRight"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999999999993`,
                     3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -3.8974395678716865`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"iDispLeft\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"iDispLeft", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4499999852628056`,
                     0.5500000656474976}, {-0.25, 0}, 
                    Offset[10], {1.0000000267948967`, 1.4545454155710584`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"iLeft\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"iLeft\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 3\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"iLeft", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "iLeft"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4499999732051023`,
                     1.0000000656474974`}, {-0.25, 0}, 
                    Offset[10], {0.9999999999999998, -3.897439558965165*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"iRight\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"iRight\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 3\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"iRight", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "iRight"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999732051023`,
                     1.0000000388526005`}, {-0.25, 0}, 
                    Offset[10], {0.9999999999999998, -3.897439558965165*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999879422958`,
                     0.4500000388526005}, {-0.25, 0}, 
                    Offset[10], {0.9999999732051027, -1.4545454935198499`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -3.8974395678716865`*^-8}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"iDispLeft\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["iDispLeft", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{{
                    EdgeForm[{
                    RGBColor[0.25, 0.599125, 0.5153350000000001], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 
                    20.}, {19.903200149536133`, 16.}, {17.903200149536133`, 
                    14.}, {13.903200149536133`, 14.}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    16.}, {7.903200149536133, 20.}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    12.}, {7.903200149536133, 8.}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8313725490196079, 0.4117647058823529, 
                    0.12941176470588237`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {
                    18., 21.}}}]}, {
                    FaceForm[{
                    RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {
                    12., 16.}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6.,
                     21.}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5803921568627451, 0.5098039215686274, 
                    0.8352941176470589], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 
                    10.}}}]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                    GrayLevel[1], ImageSize -> 36, 
                    PlotRange -> {{-2, 30}, {-2, 30}}], {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["loss", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"iLeft\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["iLeft", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 
                    20.}, {19.903200149536133`, 16.}, {17.903200149536133`, 
                    14.}, {13.903200149536133`, 14.}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    16.}, {7.903200149536133, 20.}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    12.}, {7.903200149536133, 8.}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8313725490196079, 0.4117647058823529, 
                    0.12941176470588237`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {
                    18., 21.}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {
                    12., 16.}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6.,
                     21.}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 
                    10.}}}]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                    GrayLevel[1], ImageSize -> 36, 
                    PlotRange -> {{-2, 30}, {-2, 30}}], {-1.9999999732051024`,
                     1.0000000535897937`}], 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"disparity\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["disparity", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-2.999999973205102, 1.0000000803846907`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"iRight\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["iRight", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, 
                    DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    
                    GeneralUtilities`Graphics`PackagePrivate`\
makeSelectionHighlighter[
                    
                    Part[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-2.999999973205102, 
                    1.0000000803846907`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {0., 0.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    
                    Part[{8, 31, 8, 31, 8, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Part[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    RGBColor[0.25, 0.599125, 0.515335], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    RGBColor[0.565492, 0.263725, 0.7075], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    StandardForm, Graphics], 
                    ImageSizeCache -> {{
                    4.503599627370496*^15, -4.503599627370496*^15}, {
                    4.503599627370496*^15, -4.503599627370496*^15}}]}, 
                    AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{35., 35.}, {35., 25.}}, 
                    ImageSize -> {234.99999999999994`, 140.00000643077527`}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    RowBox[{"Input", " ", "Ports"}], FontWeight -> Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"iLeft\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"iLeft\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"iLeft"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"iLeft\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"iLeft"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"iRight\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"iRight\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"iRight"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"iRight\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"iRight"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"iDispLeft\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"iDispLeft\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"iDispLeft"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"iDispLeft\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"iDispLeft"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox[
                    RowBox[{"Output", " ", "Ports"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]94\[Times]311\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "disparity" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"iLeft" -> 
                    NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT], "iRight" -> 
                    NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"featuresLeft" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 94,
                     311}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|"Type" -> "Padding", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {3, 94, 311}, 
                    "$OutputSize" -> {3, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3, 96, 
                    313}, NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder1/c/Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 16, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 3, 
                    "$InputSize" -> {96, 313}, "$OutputSize" -> {94, 311}, 
                    "$WeightsInputChannels" -> 3|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3, 96, 
                    313}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder1/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder1/bn/Biases"|>], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    16}]|>, "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 
                    0.001, "Interleaving" -> False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 94,
                     311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "pad", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "relu", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "relu", "Outputs", 
                    "Output"]}|>, "2" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 94,
                     311}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|"Type" -> "Padding", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {16, 94, 311}, 
                    "$OutputSize" -> {16, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 96,
                     313}, NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder2/c/Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 16, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 16, 
                    "$InputSize" -> {96, 313}, "$OutputSize" -> {94, 311}, 
                    "$WeightsInputChannels" -> 16|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 96, 
                    313}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder2/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder2/bn/Biases"|>], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    16}]|>, "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 
                    0.001, "Interleaving" -> False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 94,
                     311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "pad", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "relu", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "relu", "Outputs", 
                    "Output"]}|>, "3" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|"Type" -> "Padding", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {16, 94, 311}, 
                    "$OutputSize" -> {16, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 96,
                     313}, NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder3/c/Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 32, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 16, 
                    "$InputSize" -> {96, 313}, "$OutputSize" -> {94, 311}, 
                    "$WeightsInputChannels" -> 16|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 96, 
                    313}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder3/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder3/bn/Biases"|>], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{32}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    32}]|>, "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 
                    0.001, "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "pad", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "relu", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "relu", "Outputs", 
                    "Output"]}|>, "4" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|"Type" -> "Padding", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {32, 94, 311}, 
                    "$OutputSize" -> {32, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 96,
                     313}, NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder4/c/Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 32, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 32, 
                    "$InputSize" -> {96, 313}, "$OutputSize" -> {94, 311}, 
                    "$WeightsInputChannels" -> 32|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 96, 
                    313}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder4/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder4/bn/Biases"|>], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{32}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    32}]|>, "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 
                    0.001, "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "pad", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "relu", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "relu", "Outputs", 
                    "Output"]}|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "featuresRight" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 94,
                     311}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|"Type" -> "Padding", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {3, 94, 311}, 
                    "$OutputSize" -> {3, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3, 96, 
                    313}, NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder1/c/Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 16, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 3, 
                    "$InputSize" -> {96, 313}, "$OutputSize" -> {94, 311}, 
                    "$WeightsInputChannels" -> 3|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3, 96, 
                    313}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder1/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder1/bn/Biases"|>], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    16}]|>, "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 
                    0.001, "Interleaving" -> False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 94,
                     311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "pad", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "relu", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "relu", "Outputs", 
                    "Output"]}|>, "2" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 94,
                     311}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|"Type" -> "Padding", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {16, 94, 311}, 
                    "$OutputSize" -> {16, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 96,
                     313}, NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder2/c/Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 16, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 16, 
                    "$InputSize" -> {96, 313}, "$OutputSize" -> {94, 311}, 
                    "$WeightsInputChannels" -> 16|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 96, 
                    313}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder2/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder2/bn/Biases"|>], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    16}]|>, "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 
                    0.001, "Interleaving" -> False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 94,
                     311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "pad", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "relu", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "relu", "Outputs", 
                    "Output"]}|>, "3" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|"Type" -> "Padding", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {16, 94, 311}, 
                    "$OutputSize" -> {16, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{16, 96,
                     313}, NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder3/c/Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 32, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 16, 
                    "$InputSize" -> {96, 313}, "$OutputSize" -> {94, 311}, 
                    "$WeightsInputChannels" -> 16|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 96, 
                    313}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder3/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder3/bn/Biases"|>], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{32}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    32}]|>, "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 
                    0.001, "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "pad", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "relu", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "relu", "Outputs", 
                    "Output"]}|>, "4" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|"Type" -> "Padding", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {32, 94, 311}, 
                    "$OutputSize" -> {32, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 96,
                     313}, NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder4/c/Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 32, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 32, 
                    "$InputSize" -> {96, 313}, "$OutputSize" -> {94, 311}, 
                    "$WeightsInputChannels" -> 32|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 96, 
                    313}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "encoder4/bn/Scaling"|>], "Biases" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "encoder4/bn/Biases"|>], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{32}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    32}]|>, "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 
                    0.001, "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "pad", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "relu", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "relu", "Outputs", 
                    "Output"]}|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "costVolume" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"fLeft" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT], "fRight" -> 
                    NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 33, 94, 311}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"left" -> <|
                    "Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Replicate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[33], "Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{33, 32,
                     94, 311}, NeuralNetworks`AtomT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Transpose[#, {2, 1, 3, 4}]& ), 
                    "Net" -> <|"Type" -> "Transpose", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{2, 1, 3, 4}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{33, 32, 
                    94, 311}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 33,
                     94, 311}, NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{33, 32, 
                    94, 311}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 33,
                     94, 311}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 33,
                     94, 311}, NeuralNetworks`AtomT]|>|>, 
                    "right" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 33,
                     94, 311}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Padding", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Specification" -> {{0, 0}, {0, 0}, {32, 0}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {32, 94, 311}, 
                    "$OutputSize" -> {32, 94, 343}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 94,
                     343}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[33, 343]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[32, 342]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[31, 341]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[30, 340]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[29, 339]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[28, 338]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[27, 337]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[26, 336]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[25, 335]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "11" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[24, 334]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "12" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[23, 333]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "13" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[22, 332]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "14" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[21, 331]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "15" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[20, 330]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "16" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[19, 329]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "17" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[18, 328]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "18" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[17, 327]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "19" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[16, 326]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "20" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[15, 325]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "21" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[14, 324]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "22" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[13, 323]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "23" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[12, 322]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "24" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[11, 321]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "25" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[10, 320]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "26" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[9, 319]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "27" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[8, 318]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "28" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[7, 317]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "29" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[6, 316]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "30" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[5, 315]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "31" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[4, 314]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "32" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[3, 313]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "33" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[2, 312]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "34" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ({
                    Part[#, All, All, 
                    Span[
                    1 - $CellContext`d + 32, 311 - $CellContext`d + 32]]}& ), 
                    "Net" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[1, -1], 
                    Span[1, 311]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 94, 343}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 94, 
                    343}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT]|>|>, 
                    "35" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{1, 32, 
                    94, 311}, NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input3" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input4" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input5" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input6" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input7" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input8" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input9" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input10" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input11" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input12" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input13" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input14" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input15" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input16" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input17" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input18" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input19" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input20" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input21" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input22" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input23" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input24" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input25" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input26" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input27" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input28" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input29" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input30" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input31" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input32" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT], "Input33" -> 
                    NeuralNetworks`TensorT[{1, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{33, 32, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "36" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Transpose[#, {2, 1, 3, 4}]& ), 
                    "Net" -> <|"Type" -> "Transpose", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{2, 1, 3, 4}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{33, 32, 
                    94, 311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 33,
                     94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{33, 32, 
                    94, 311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 33,
                     94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "20", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "22", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "23", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "24", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "25", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "26", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "27", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "28", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "29", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "30", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "31", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "32", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "33", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "34", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input1"] -> NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input3"] -> NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input5"] -> NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input7"] -> NeuralNetworks`NetPath[
                    "Nodes", "8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input8"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input9"] -> NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input10"] -> NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input11"] -> NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input12"] -> NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input13"] -> NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input14"]
                     -> NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input15"] -> NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input16"] -> NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input17"] -> NeuralNetworks`NetPath[
                    "Nodes", "18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input18"] -> NeuralNetworks`NetPath[
                    "Nodes", "19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input19"] -> NeuralNetworks`NetPath[
                    "Nodes", "20", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input20"] -> NeuralNetworks`NetPath[
                    "Nodes", "21", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input21"] -> NeuralNetworks`NetPath[
                    "Nodes", "22", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input22"] -> NeuralNetworks`NetPath[
                    "Nodes", "23", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input23"] -> NeuralNetworks`NetPath[
                    "Nodes", "24", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input24"] -> NeuralNetworks`NetPath[
                    "Nodes", "25", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input25"] -> NeuralNetworks`NetPath[
                    "Nodes", "26", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input26"] -> NeuralNetworks`NetPath[
                    "Nodes", "27", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input27"] -> NeuralNetworks`NetPath[
                    "Nodes", "28", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input28"] -> NeuralNetworks`NetPath[
                    "Nodes", "29", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input29"] -> NeuralNetworks`NetPath[
                    "Nodes", "30", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input30"] -> NeuralNetworks`NetPath[
                    "Nodes", "31", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input31"] -> NeuralNetworks`NetPath[
                    "Nodes", "32", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input32"] -> NeuralNetworks`NetPath[
                    "Nodes", "33", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", 
                    "Input33"] -> NeuralNetworks`NetPath[
                    "Nodes", "34", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "36", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "35", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "36", "Outputs", 
                    "Output"]}|>, "concat" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{32, 33, 
                    94, 311}, NeuralNetworks`AtomT], "Input2" -> 
                    NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{64, 33,
                     94, 311}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "left", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "fLeft"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "right", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "fRight"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "concat", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "left", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "concat", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "right", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "concat", "Outputs", "Output"]}|>, 
                    "processedCost" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 33, 
                    94, 311}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 33,
                     94, 311}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|"Type" -> "Padding", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}, {1, 1}}, 
                    "Padding" -> "Fixed", "$Rank" -> 4, 
                    "$InputSize" -> {64, 33, 94, 311}, 
                    "$OutputSize" -> {64, 35, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 33, 
                    94, 311}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{64, 35,
                     96, 313}, NeuralNetworks`AtomT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 64, 3, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3, 3}, 
                    "Stride" -> {1, 1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}, {
                    0, 0}}, "Dilation" -> {1, 1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 3, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {35, 96, 313}, 
                    "$OutputSize" -> {33, 94, 311}, "$WeightsInputChannels" -> 
                    64|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64,
                     35, 96, 313}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 33,
                     94, 311}, NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {33, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 33, 
                    94, 311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 33,
                     94, 311}, NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 33, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 33, 
                    94, 311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 33,
                     94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "pad", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "relu", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "relu", "Outputs", 
                    "Output"]}|>, "2" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 33,
                     94, 311}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"pad" -> <|"Type" -> "Padding", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Specification" -> {{0, 0}, {1, 1}, {1, 1}, {1, 1}}, 
                    "Padding" -> "Fixed", "$Rank" -> 4, 
                    "$InputSize" -> {32, 33, 94, 311}, 
                    "$OutputSize" -> {32, 35, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 33, 
                    94, 311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 35,
                     96, 313}, NeuralNetworks`RealT]|>|>, 
                    "c" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 3, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3, 3}, 
                    "Stride" -> {1, 1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}, {
                    0, 0}}, "Dilation" -> {1, 1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 3, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {35, 96, 313}, 
                    "$OutputSize" -> {33, 94, 311}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32,
                     35, 96, 313}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 33,
                     94, 311}, NeuralNetworks`RealT]|>|>, 
                    "bn" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {33, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 33, 
                    94, 311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 33,
                     94, 311}, NeuralNetworks`RealT]|>|>, 
                    "relu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 33, 94, 311}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 33, 
                    94, 311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 33,
                     94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "pad", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "bn", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "relu", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "bn", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "relu", "Outputs", 
                    "Output"]}|>, "3" -> <|
                    "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> {{0, 0}, {1, 1}, {1, 
                    1}, {1, 1}}, "Padding" -> "Fixed", "$Rank" -> 4, 
                    "$InputSize" -> {32, 33, 94, 311}, 
                    "$OutputSize" -> {32, 35, 96, 313}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 33, 
                    94, 311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{32, 35,
                     96, 313}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1, 32, 3, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 1, "KernelSize" -> {3, 3, 3}, 
                    "Stride" -> {1, 1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}, {
                    0, 0}}, "Dilation" -> {1, 1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 3, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {35, 96, 313}, 
                    "$OutputSize" -> {33, 94, 311}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 35, 96, 313}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 33, 
                    94, 311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 33, 94, 311}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>|>, 
                    "disparity" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 33, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{94, 311}, NeuralNetworks`RealT]|>,
                     "Nodes" -> <|"dispRange" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{33}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{33}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {33}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{33}, 
                    NeuralNetworks`AtomT]|>, 
                    "TrainingParameters" -> <|
                    "LearningRateMultipliers" -> 0|>|>, 
                    "cost" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{1}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1, 33, 
                    94, 311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{33, 94,
                     311}, NeuralNetworks`RealT]|>|>, 
                    "transposed" -> <|"Type" -> "Transpose", "Arrays" -> <||>,
                     "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{3, 1, 2}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{33, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{94, 
                    311, 33}, NeuralNetworks`RealT]|>|>, 
                    "probabilities" -> <|"Type" -> "Softmax", 
                    "Arrays" -> <||>, "Parameters" -> <|"Level" -> 3|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{94, 311, 
                    33}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{94, 
                    311, 33}, NeuralNetworks`RealT]|>|>, 
                    "disparityMap" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{94, 311,
                     33}, NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{33}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{94, 
                    311}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "cost", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "disparityMap", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dispRange", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "transposed", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "cost", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "probabilities", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "transposed", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "disparityMap", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "probabilities", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "disparityMap", "Outputs", "Output"]}|>, 
                    "output" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 0|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{94, 311}, NeuralNetworks`RealT]|>,
                     "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "featuresLeft", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "iLeft"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "featuresRight", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "iRight"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "costVolume", "Inputs", "fLeft"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "featuresLeft", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "costVolume", "Inputs", "fRight"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "featuresRight", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "processedCost", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "costVolume", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "disparity", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "processedCost", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "disparity", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Outputs", "Output"]}|>, 
                    "loss" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Target" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"mask" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    UnitStep[-1.*^-6 + #]& ], "$Dimensions" -> {1, 94, 311}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "n" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[0, 
                    DirectedInfinity[1]]]|>|>, 
                    "diff" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT], "mask" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[#3 Abs[
                    Subtract[#, #2]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1, 94, 
                    311}, NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT], "mask" -> 
                    NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 94, 
                    311}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1, 94, 
                    311}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "mask"] -> 
                    NeuralNetworks`NetPath["Inputs", "mask"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}|>, 
                    "mean" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Divide[#, #2]& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"diff" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], "n" -> 
                    NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[0, 
                    DirectedInfinity[1]]]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "mask", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "diff", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "diff", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "diff", "Inputs", "mask"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "mask", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "n", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "mask", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "mean", "Inputs", "n"] -> 
                    NeuralNetworks`NetPath["Nodes", "n", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "mean", "Inputs", "diff"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "diff", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "mean", "Outputs", "Output"]}|>|>, 
                    "Inputs" -> <|
                    "iLeft" -> <|"Form" -> 
                    NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT], "Type" -> "Image", "ImageSize" -> 
                    NeuralNetworks`ValidatedParameter[{311, 94}], 
                    "ColorSpace" -> "RGB", "ColorChannels" -> 3, 
                    "Interleaving" -> False, "MeanImage" -> None, 
                    "VarianceImage" -> None, "DataTransposed" -> False, 
                    "Method" -> "Stretch", "Resampling" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Padding" -> 
                    GrayLevel[0], "Alignment" -> Center, "$Version" -> 
                    "14.1.2"|>, "iRight" -> <|
                    "Form" -> NeuralNetworks`TensorT[{3, 94, 311}, 
                    NeuralNetworks`RealT], "Type" -> "Image", "ImageSize" -> 
                    NeuralNetworks`ValidatedParameter[{311, 94}], 
                    "ColorSpace" -> "RGB", "ColorChannels" -> 3, 
                    "Interleaving" -> False, "MeanImage" -> None, 
                    "VarianceImage" -> None, "DataTransposed" -> False, 
                    "Method" -> "Stretch", "Resampling" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Padding" -> 
                    GrayLevel[0], "Alignment" -> Center, "$Version" -> 
                    "14.1.2"|>, "iDispLeft" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT], "Type" -> "Image", "ImageSize" -> 
                    NeuralNetworks`ValidatedParameter[{311, 94}], 
                    "ColorSpace" -> "Grayscale", "ColorChannels" -> 1, 
                    "Interleaving" -> False, "MeanImage" -> None, 
                    "VarianceImage" -> None, "DataTransposed" -> False, 
                    "Method" -> "Stretch", "Resampling" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Padding" -> 
                    GrayLevel[0], "Alignment" -> Center, "$Version" -> 
                    "14.1.2"|>|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 94, 311}, 
                    NeuralNetworks`RealT], "Loss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "disparity", "Inputs", "iLeft"] -> 
                    NeuralNetworks`NetPath["Inputs", "iLeft"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "disparity", "Inputs", "iRight"] -> 
                    NeuralNetworks`NetPath["Inputs", "iRight"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "iDispLeft"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "disparity", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "disparity", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "loss", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "iDispLeft"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Inputs", "iLeft"], 
                    NeuralNetworks`NetPath["Nodes", "disparity"], 
                    NeuralNetworks`NetPath["Inputs", "iRight"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "iDispLeft"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Inputs", "iLeft"], 
                    NeuralNetworks`NetPath["Nodes", "disparity"], 
                    NeuralNetworks`NetPath["Inputs", "iRight"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <|
                    "encoder1/bn/Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}], 
                    "encoder1/bn/Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], 
                    "encoder1/c/Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 3, 3, 3}], 
                    "encoder2/bn/Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}], 
                    "encoder2/bn/Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], 
                    "encoder2/c/Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 16, 3, 3}], 
                    "encoder3/bn/Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], 
                    "encoder3/bn/Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], 
                    "encoder3/c/Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 16, 3, 3}], 
                    "encoder4/bn/Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], 
                    "encoder4/bn/Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], 
                    "encoder4/c/Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 3, 3}]|>, {}], 
                    
                    ToBoxes[""]], ImageSizeCache -> {0., {0., 5.7421875}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Initialization :> {NetGraph}], "SummaryItem"]}}, 
                  AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NetGraph, 1209416, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NetGraph, 1209416, 
            11093102331838410844178377275995954957004824885568877549432, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<2>, <6>]"& )],
  False,
  BoxID -> 11093102331838410844178377275995954957004824885568877549432,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9393887161646557`*^9, 3.940899485805951*^9, 
  3.9409016500981827`*^9, 3.940903765770944*^9, 3.940907471052773*^9, 
  3.9409132486315403`*^9, 3.94097646951616*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"5332a5a1-e6ee-49ce-9bf7-46434083fbb3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<sgbm.wlnet\>\"", ",", "trained"}], "]"}], "\n"}]], "Input",
 CellChangeTimes->{{3.940907782270698*^9, 3.940907788388135*^9}, 
   3.940907852760921*^9, {3.940907903023217*^9, 3.9409079537749023`*^9}, {
   3.940908055240547*^9, 3.940908056789638*^9}, {3.9409132536554956`*^9, 
   3.9409132698174343`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"b347a8d0-ae41-4529-adba-610ab8bca48d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pred", "[", "x_", "]"}], ":=", 
    RowBox[{"Image", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"trained", "[", "x", "]"}], "[", "\"\<Output\>\"", "]"}], ",", 
      
      RowBox[{"Interleaving", "->", "False"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9393851865296793`*^9, 3.939385221729705*^9}, {
   3.940899570370954*^9, 3.940899574742854*^9}, {3.940976745870349*^9, 
   3.940976748132107*^9}, {3.940977683655787*^9, 3.9409776843293552`*^9}, {
   3.940980251018241*^9, 3.940980251667581*^9}, {3.940980614210844*^9, 
   3.9409806151838923`*^9}, {3.940980649828959*^9, 3.9409806505292587`*^9}, {
   3.9409810864853897`*^9, 3.940981092960629*^9}, 
   3.9410598659958973`*^9},ExpressionUUID->"e12b8ec6-ecac-4770-9e2e-\
b3797de67c28"]
}, Open  ]]
},
WindowSize->{1440, 852},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1. Inherited,
FrontEndVersion->"14.1 for Linux x86 (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f5e8463c-baf8-41e1-baea-9d5bd1f60c0f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 149, 3, 65, "Section",ExpressionUUID->"e3140937-e0ac-49c1-8f53-8480154aae98"],
Cell[728, 27, 737, 19, 50, "Input",ExpressionUUID->"4641e4fb-7cfa-4c49-82f1-e1372bfa2b26"],
Cell[1468, 48, 484, 10, 29, "Input",ExpressionUUID->"f3b78929-97f5-4faf-a22b-f4b1f446bd25"],
Cell[CellGroupData[{
Cell[1977, 62, 1368, 38, 169, "Input",ExpressionUUID->"4cf3dba8-8761-4c9f-aead-47f9886fea9f"],
Cell[3348, 102, 341, 5, 33, "Output",ExpressionUUID->"f06d6355-c00b-4554-9162-62ac30848e57"]
}, Open  ]],
Cell[3704, 110, 1291, 31, 153, "Input",ExpressionUUID->"0491b0b4-5064-4825-b0f9-7b8f5c54f678"],
Cell[CellGroupData[{
Cell[5020, 145, 989, 31, 111, "Input",ExpressionUUID->"75d5a1a3-cd8f-47d1-81f8-8d55aa9995f6"],
Cell[6012, 178, 350, 8, 33, "Output",ExpressionUUID->"576b9a60-5892-45aa-8c70-3408a24512fa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6411, 192, 158, 3, 65, "Section",ExpressionUUID->"b9f5d3bc-1d75-4c8e-addb-b7ff03c37880"],
Cell[CellGroupData[{
Cell[6594, 199, 159, 3, 53, "Subsection",ExpressionUUID->"e36239bc-4f2d-4c6e-a060-0040291618b6"],
Cell[6756, 204, 515, 10, 77, "Text",ExpressionUUID->"4469fd14-940c-4fd6-a2f6-9774713f5b6d"],
Cell[7274, 216, 6097, 141, 430, "Input",ExpressionUUID->"e8257baa-249d-4763-a4aa-3760dbb265fd",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[13408, 362, 164, 3, 53, "Subsection",ExpressionUUID->"5a8c07f9-fa25-4427-bd2a-2be3c02091b9"],
Cell[13575, 367, 4753, 117, 252, "Input",ExpressionUUID->"909769fa-0dc0-4242-a4e6-976b3c35614d",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[18365, 489, 187, 3, 53, "Subsection",ExpressionUUID->"10976172-6f9c-42cf-8760-c7332b0a8f55"],
Cell[18555, 494, 4337, 101, 232, "Input",ExpressionUUID->"a523a2b9-48e5-44e9-bab2-6f696f128948",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[22929, 600, 267, 4, 53, "Subsection",ExpressionUUID->"e1719df3-4740-4861-9d92-deb83e0e3e11"],
Cell[23199, 606, 436, 9, 55, "Text",ExpressionUUID->"da4b007a-08df-485f-b783-4a9bc38737c6"],
Cell[23638, 617, 2248, 49, 185, "Input",ExpressionUUID->"f5549779-b0a5-4c9f-88a6-01afd863ffc3",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[25923, 671, 169, 3, 53, "Subsection",ExpressionUUID->"43a97f1e-83a4-4a62-b377-b04609a2451e"],
Cell[26095, 676, 5177, 115, 385, "Input",ExpressionUUID->"cdea1023-a1d5-43df-bbe1-daafbf73078a",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[31309, 796, 156, 3, 53, "Subsection",ExpressionUUID->"04d491a9-a9a0-4acd-9611-250b10dfb18c"],
Cell[31468, 801, 1965, 47, 205, "Input",ExpressionUUID->"70fa9e73-6a13-4ada-af62-d494a6763467",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[33470, 853, 262, 4, 53, "Subsection",ExpressionUUID->"834f6c79-7eb8-455d-984a-89bb9efe75b8"],
Cell[33735, 859, 3583, 81, 285, "Input",ExpressionUUID->"f21e6386-a146-4f26-b527-b4f2730cc4d0",
 InitializationCell->True],
Cell[37321, 942, 177, 3, 29, "Input",ExpressionUUID->"345dec28-76b6-4c41-9181-9d6c58997edc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37547, 951, 155, 3, 65, "Section",ExpressionUUID->"9998fd17-7b91-46cf-903a-dbb51ab588ea"],
Cell[CellGroupData[{
Cell[37727, 958, 361, 8, 29, "Input",ExpressionUUID->"e00f1744-55f4-41fa-bd8c-8ac0cd58e00f"],
Cell[38091, 968, 515601, 9789, 63, "Output",ExpressionUUID->"5aaed817-24f8-4271-8f0c-e9dee57e235f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553729, 10762, 2077, 38, 269, "Input",ExpressionUUID->"6871d1c4-0bf4-46f0-b217-e54a4f2b5b8a"],
Cell[555809, 10802, 20569, 448, 449, "Output",ExpressionUUID->"6a8c46ca-15a0-4536-8aae-33d91aee49fb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[576427, 11256, 176, 4, 65, "Section",ExpressionUUID->"b87c7f21-3c83-473d-bccd-2c7d5ff1f3e1",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[576628, 11264, 258, 4, 29, "Input",ExpressionUUID->"86761063-a2b0-4b80-b221-e385bebb767f"],
Cell[576889, 11270, 332138, 6014, 326, "Output",ExpressionUUID->"5332a5a1-e6ee-49ce-9bf7-46434083fbb3"]
}, Open  ]],
Cell[909042, 17287, 448, 8, 49, "Input",ExpressionUUID->"b347a8d0-ae41-4529-adba-610ab8bca48d"],
Cell[909493, 17297, 862, 19, 69, "Input",ExpressionUUID->"e12b8ec6-ecac-4770-9e2e-b3797de67c28"]
}, Open  ]]
}
]
*)

